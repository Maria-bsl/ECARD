@model FUNDING.BL.BusinessEntities.Masters.CardStates_Master

@{
    AjaxOptions createCardStateAjaxOptions = new AjaxOptions();
    createCardStateAjaxOptions.HttpMethod = "POST";
    //createCardStateAjaxOptions.UpdateTargetId = "divCardState";
    createCardStateAjaxOptions.OnBegin = "OnBeginRequestCreate";
    createCardStateAjaxOptions.OnSuccess = "OnSuccessRequestCreate";
    //createCardStateAjaxOptions.OnComplete = "OnCompleteRequestCreate";
    createCardStateAjaxOptions.OnFailure = "OnFailureRequestCreate";
    createCardStateAjaxOptions.Confirm = "Do you want to add card state?";
}

@using (Ajax.BeginForm(actionName: "AjaxHelperCreateForm", controllerName: "CardStates", routeValues: null,
    ajaxOptions: createCardStateAjaxOptions, htmlAttributes: new { id = "ajaxHelperCreateForm", autocomplete="off" }))
{
    @Html.AntiForgeryToken()

    <!-- Modal -->
    <div class="modal fade" id="ajaxHelperCreateModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-xl">
            <div id="divCardState" class="modal-content position-relative">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Create Card State</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    </button>
                </div>
                <div class="modal-body">

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group row mb-3">
                            @Html.LabelFor(model => model.card_state, htmlAttributes: new { @class = "col-form-label col-md-auto" })
                            <div class="col-md">
                                @Html.EditorFor(model => model.card_state, new { htmlAttributes = new { @class = "form-control", data_val_remote = "This card state already exists", data_val_remote_additionalfields = "*.card_state,*.__RequestVerificationToken", data_val_remote_type = "POST", data_val_remote_url = Url.Action("IsCardStateAvailable", "CardStates") } })
                                @Html.ValidationMessageFor(model => model.card_state, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="submitCreateCustomers" type="submit" class="btn btn-outline-info btn-rounded">Save</button>
                    <button type="button" class="btn btn-outline-danger btn-rounded" data-bs-dismiss="modal">Close</button>
                </div>
                <div class="position-absolute w-100 h-100 modal_pre-loader">
                    <div class='d-flex justify-content-center align-items-center h-100'>
                        <div class='ripple-pre-loader'>
                            <div></div>
                            <div></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}