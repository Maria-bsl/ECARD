@model FUNDING.BL.BusinessEntities.Masters.Activities

@{
    ViewBag.Title = "Activity";
    Layout = "~/Views/Shared/Funding.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {
        // Getcolumnslang();
        GetCurrency();
        document.getElementById('txtcode').value = "00" + @ViewData["Num"];
        getmodule();
        $("#btnSubmit").click(function () {
            opType = jQuery("#hdnEmployee").val();
            var message = validateEmployeecur();
            if (message.length > 0 && opType != 'D') {
                notifyMessage(message, 'danger');
            }
            else {
                if (opType == 'C') {
                    var x = confirm("Are you sure you want to save?");
                    if (x) {
                        addcur();
                    }
                } else {
                    var x = confirm("Are you sure you want to Update?");
                    if (x) {
                        addcur();
                    }
                }
            }
        })
        $("#btnDelete").click(function () {
            delcurrrency();
        });
    });
</script>
<script type="text/javascript">
    var glob;
    @*function Getcolumnslang() {
        jQuery.ajax({
            type: 'POST',
            url: '@Url.Action("bindlan", "Ages")',
            data: '{}',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {
                if (data != null) {

                }
            }
        });
    }*@
    function getmodule() {
        jQuery.ajax({
            type: 'POST',
            url: '@Url.Action("GetModuleAct", "Module")',
            data: '{}',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {
                jQuery("#ddlmod").append(jQuery("<option></option>").val(0).html('Select'));
                if (data != null) {
                    jQuery.each(data, function (key, value) {
                        jQuery("#ddlmod").append(jQuery("<option></option>").val(value.Sno).html(value.Description));
                    });
                }
            }
        });
    }
    function GetCurrency() {
        jQuery.ajax({
            type: 'POST',
            url: '@Url.Action("GetactAct", "Activity")',
            data: '{}',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {
                jQuery("#tbl-smtp tbody").empty();
                if (jQuery.fn.DataTable.isDataTable("#tbl-smtp")) {
                    jQuery('#tbl-smtp').DataTable().clear().destroy();
                }
                if (data != 0) {
                    var i = 1;
                    jQuery.each(data, function (key, value) {
                        var row = '<tr>' +
                            '<td>' + i + '</td>' +
                            '<td>' + value.Code + '</td>' +
                            '<td>' + value.Description + '</td>' +
                            '<td class="d-none">' + value.Mod_Sno + '</td>' +
                            '<td>' + value.Name + '</td>' +
                            '<td>' + value.Status + '</td>' +
                            '<td class="d-none">' + value.Inst_reg + '</td>' +
                            '<td ><button class="btn btn-outline-secondary btn-sm" data-toggle="modal" data-target="#modal-currency" id="btn' + value.Sno + '" data-sid="' + value.Sno + '" value="Edit" onclick="showcurrencyModal(this)"><i class="fas fa-pen" ></i ></button >&nbsp;&nbsp;&nbsp;<button class="btn btn-outline-dark btn-sm" data-sid="' + value.Sno + '" id="btnDelete" data-rec="0" onclick="delcurrrency(this)"><i class="fas fa-trash" aria-hidden="true"></i></button></td>' +
                            '</tr>';
                        i++;
                        jQuery("#tbl-smtp tbody").append(row);
                    });
                }
                applyDatatable('tbl-smtp');

            }
        })
    }
    function delcurrrency(e) {
        var x = confirm("Are you sure you want to delete?");
        if (x) {
            jQuery('#hdnEmployee').val('D');
            cid = jQuery(e).data('sid');
            deleteCurrency(cid);
            return true;
        }
        else
            return false;

    }
    function addcur() {
            type = '',
            opType = jQuery("#hdnEmployee").val();
            var params = JSON.stringify(getCurrencyValues());
            jQuery.ajax({
                type: 'POST',
                url: '@Url.Action("AddAct", "Activity")',
                data: params,
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function (data) {
                    hideModal('modal-currency');
                    if (opType == 'C') {
                        if (data != 0) {
                            message = jQuery("#txtname").val() +' Activity Already Exists.';
                            type = 'danger';
                        }
                        else {
                            message = jQuery("#txtname").val() +' Activity Successfully Created.';
                            type = 'success';
                        }
                    }
                    else if (opType == 'U') {
                        var jk = true;
                        if (data == false && jk == true) {
                            message = jQuery("#txtname").val() + ' Activity Already Exists.';
                            type = 'danger';
                        }
                        else {
                            message = jQuery("#txtname").val() + ' Activity Successfully updated.';
                            type = 'success';
                        }
                    }
                    notifyMessage(message, type);
                    GetCurrency();
                    jQuery('.modal-backdrop').hide();
                }
            })
    }
    function deleteCurrency(cid) {
            type = '',
            opType = jQuery("#hdnEmployee").val();
        var params = JSON.stringify(getcurrencyID(cid));
            jQuery.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteAct", "Activity")',
                data: params,
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function (data) {
                    hideModal('modal-currency');
                    if (data == true)
                    {
                        message = jQuery("#txtname").val() + 'Activity is in Use, Cannot be Deleted';
                        type = 'danger';
                    }
                    else if (opType == 'D' && data) {
                        message = jQuery("#txtname").val() + ' Activity Successfully Deleted.';
                        type = 'success';
                    }
                    notifyMessage(message, type);
                    GetCurrency();
                }
            })

    }
</script>
<div class="card-body">
    <h5 class="card-title" id="lblage">Activity</h5>
    <div class="form-group d-flex">
        <button type="button" id="btnAdd" value="Add" data-sid="0" class="btn ml-auto mr-1 btn-sm btn-success btn-biz_logic" onclick="showcurrencyModal(this);"
                data-toggle="modal" data-target="#modal-currency">
            Create
        </button>
        <input type="hidden" id="hdnEmployee" />
    </div>
    <div class="table-responsive">
        <table id="tbl-smtp" class="table table-bordered table-sm rounded display">
            <thead class="thead-light">
                <tr>
                    <th class="sno-th">Sno</th>
                    <th>Code</th>
                    <th>Description</th>
                    <th class="d-none">Msno</th>
                    <th>Module Name</th>
                    <th>Role Status</th>
                    <th class="d-none">Inst_No</th>
                    <th class="sno-th">Actions</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
<!-- [MODALS] -->
<div class="modal fade" id="modal-currency" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="believerCreateLabel"
     aria-hidden="true">
    <div class="modal-dialog believerModal modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="lblage1">Activity</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form class="col-12 p-0 mx-auto" action="AddCurrency" method="post">
                    <div class="row">
                        <div class="form-group flex_form-group align-items-baseline col-md-8 col-lg-6">
                            <label for="gender" class="f-label_align">Role Id<span class="red">*</span></label>
                            <input type="number" class="form-control " disabled id="txtcode">
                            <input type="hidden" class="form-control hidden" id="txtSID">
                        </div>
                        <div class="form-group flex_form-group align-items-baseline col-md-8 col-lg-6">
                            <label for="gender" class="f-label_align">Description<span class="red">*</span></label>
                            <input type="text" class="form-control" id="txtname" placeholder="Description">
                        </div>
                        <div class="form-group flex_form-group align-items-baseline col-md-8 col-lg-6">
                            <label for="gender" class="f-label_align">Select Module<span class="red">*</span></label>
                            <select class="ui search dropdown form-control" id="ddlmod" name="ddlcouty"></select>
                        </div>
                        <div class="form-group flex_form-group align-items-baseline col-md-8 col-lg-6">
                            <label for="inputEmail" class="f-label_align">Status<span class="red">*</span></label>
                            &nbsp;<input type="radio" name="gender" id="rbtrue" value="Active">&nbsp;<label for="Male">Active</label>
                            &nbsp; <input class="ml-2" type="radio" name="gender" id="rbfalse" value="InActive">&nbsp;<label for="FeMale">InActive</label>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary btn-sm" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-success btn-sm btn-biz_logic" id="btnSubmit">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var cid;
    var check;
    var jk = false;
    function valid(e) {
        jk = true;
    }
    function resetRegion() {
        var txtname = document.getElementById("txtname");
        jQuery("#ddlmod").val(0).change();
        var radioValue = jQuery("#rbtrue").prop("checked", true);
            txtname.value = '';
    }
    function showcurrencyModal(e) {
        var txtcode = document.getElementById('txtcode');
        var txtname = document.getElementById('txtname');
        var ddlmod = document.getElementById('ddlmod');
        tblemployee = document.getElementById('tbl-smtp'),
            rows = tblemployee.rows,
            hdnEmployee = document.getElementById('hdnEmployee');
        if (e.value.indexOf('Edit') > -1) {
            for (var i = 0, row = null; i < rows.length; i++) {
                row = rows[i];
                if (row.cells[7].innerHTML.indexOf(e.id) > -1) {
                    txtSID.value = jQuery(e).data('sid');
                    txtcode.value = row.cells[1].innerHTML;
                    txtname.value = row.cells[2].innerHTML;
                    jQuery("#ddlmod").val(row.cells[3].innerHTML).change();
                    var flag = row.cells[5].innerHTML;
                    if (flag == 'Active') {
                        jQuery("#rbtrue").prop("checked", true);
                        jQuery("#rbfalse").prop("checked", false);
                    }
                    else if (flag == 'InActive') {
                        jQuery("#rbtrue").prop("checked", false);
                        jQuery("#rbfalse").prop("checked", true);
                    } else {
                        jQuery("#rbtrue").prop("checked", false);
                        jQuery("#rbfalse").prop("checked", false);
                    }
                }
            }
            hdnEmployee.value = 'U';
        }
        else if (e.value.indexOf('Add') > -1) {
            resetRegion();
            jQuery("#loader").css("display", "none");
            jQuery("#btnSubmit").show();
         //   jQuery("#btnSubmit").prop("show", true).html("@ViewData["Bsv"]");
            jQuery("#tbl-smtp1").empty();
            hdnEmployee.value = 'C';
        }
    }
    function getCurrencyValues() {
        var txtcode = document.getElementById('txtcode');
        var txtname = document.getElementById("txtname");
        var ddlmod = $("#ddlmod option:selected").text();
        var ddlmod1 = document.getElementById("ddlmod");
        var modsno = ddlmod1.options[ddlmod1.selectedIndex].value;
        rblGender = jQuery("input[name='gender']:checked");
        txtSID = document.getElementById('txtSID'),
            tblemployee = document.getElementById('tbl-smtp'),
            rows = tblemployee.rows,
            hdnEmployee = document.getElementById('hdnEmployee');
        if (txtSID.value == '') {
            txtSID.value = '0';
        }
        var table = jQuery('#tbl-smtp').DataTable(),
            selectedRow = table.rows('.selected').data();
        var check = true;
        var dt = '';
        var dn = '';
        var doublecheck = false;
        var doublechecked = false;
        if (hdnEmployee.value == "C") {
            txtSID.value = '0';
            jk = false;
            var tblemployee = document.getElementById('tbl-smtp'),
                rows = tblemployee.rows;
                var data = {
                    code: txtcode.value,
                    name: txtname.value.trim(),
                    act: rblGender.val(),
                    sno: txtSID.value,
                    mname: ddlmod,
                    msno: modsno,
                    dummy: check,
                }
                return data;
        }
        else if (hdnEmployee.value == "U") {
            for (var i = 0; i < rows.length; i++) {
                var to = rows[i].cells[2].innerHTML;
                var too = txtname.value;
                var codes = txtcode.value;
                if ((to == too)  && jk == true) {
                    check = false;
                }
                else { }
            }
            if (check == true) {
                var data = {
                    code: txtcode.value,
                    name: txtname.value.trim(),
                    act: rblGender.val(),
                    mname: ddlmod,
                    msno: modsno,
                    sno: txtSID.value,
                    dummy: check,
                }
            }
            else {
                var data =
                {
                    sno: txtSID.value,
                    dummy: check,
                }
            }
            return data;
        }
        else if (hdnEmployee.value == "D") {
            var data = {
                employeeId: selectedRow[0][2],
                employeeName: selectedRow[0][3],
                jobId: 0,
                joined: selectedRow[0][5],
                salary: selectedRow[0][6],
                deptId: 0,
                active: 0,
                opType: hdnEmployee.value,
            }
            return data;
        }
    }
    function getcurrencyID(glob) {
        var table = jQuery('#tbl-smtp').DataTable(),
            selectedRow = table.rows('.selected').data();
        if (hdnEmployee.value == "D") {
            var data = {
                sno: glob,
            }
            return data;
        }
    }
    function validateEmployeecur() {
        var txtname = document.getElementById("txtname");
        result = '';
        if (txtname.value.trim().length == 0) {
            result += 'Description is required.<br/>';
        } else {
            var d = alpha(txtname.value.trim());
            if (d != false) {
                result += d;
            }
        }
        return result;
    }
    function deletecurGrid() {
        var table = jQuery('#tbl-smtp').DataTable(),
            selectedRow = table.rows('.selected');
        table.row(selectedRow).remove().draw();
    }
    function clearRecordSelectionreg(e) {
        var table = document.getElementById('tbl-smtp');
        var chk = table.getElementsByTagName('input');
        var len = chk.length;
        for (var i = 0; i < len; i++) {
            if (e.id != chk[i].id && chk[i].type === 'checkbox') {
                chk[i].checked = false;
            }
        }
        jQuery('#tbl-smtp tbody > tr').removeClass('selected');
    }
    function selectCurrencyRecord(e) {
        var table = document.getElementById('tbl-smtp'),
            rows = table.rows,
            rowNumber = 0;
        clearRecordSelectionreg(e);
        for (var Index = 1, row = null; Index < rows.length; Index++) {
            row = rows[Index];
            rowNumber = Index - 1;
            cid = (e.id).substr(3);
            if (e.checked && e.id.trim().toLowerCase().indexOf(e.id) > -1) {
                jQuery('#tbl-smtp tbody > tr').eq(rowNumber).addClass('selected');
                break;
            }
            else if (!e.checked && e.id.trim().toLowerCase().indexOf(e.id) > -1) {
                jQuery('#tbl-smtp tbody > tr').eq(rowNumber).removeClass('selected');
                break;
            }
        }
    }
    function getID(e) {
        var table = document.getElementById('tbl-smtp'),
            rows = table.rows,
            rowNumber = 0;
        for (var Index = 1, row = null; Index < rows.length; Index++) {
            row = rows[Index];
            rowNumber = Index - 1;
        }
    }
</script>



