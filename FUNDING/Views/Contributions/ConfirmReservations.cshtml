
@{
    Layout = "~/Views/Shared/_Customers.cshtml";

    ViewData["Title"] = "Contributors Reservations";
    ViewData["Home"] = "Home";
    ViewData["Bct"] = "Register";

    //Table header labels
    ViewData["Sno"] = "Sno";

    ViewData["Actions"] = "Actions";

}


<div class="row page-titles">
    <div class="col-md-5 align-self-center">
        <h4 class="text-themecolor">@ViewData["Title"]</h4>
    </div>
    <div class="col-md-7 align-self-center text-end">
        <div class="d-flex justify-content-end align-items-center">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Dashboard", "CustomerActivity")">@ViewData["Home"]</a>
                </li>
                <li class="breadcrumb-item active">@ViewData["Title"]</li>
            </ol>
        </div>
    </div>
</div>
<div class="card border-0">
    <div class="card-body">

        <ul class="nav nav-tabs mb-3" id="pills-tab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="pills-home-tab" data-bs-toggle="pill"
                        data-bs-target="#pills-home" type="button" role="tab" aria-controls="pills-home"
                        aria-selected="true">
                    Undecided
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="pills-profile-tab" data-bs-toggle="pill"
                        data-bs-target="#pills-profile" type="button" role="tab" aria-controls="pills-profile"
                        aria-selected="false">
                    Settled
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="pills-contact-tab" data-bs-toggle="pill"
                        data-bs-target="#pills-contact" type="button" role="tab" aria-controls="pills-contact"
                        aria-selected="false">
                    On Hold
                </button>
            </li>
        </ul>
        @Html.Partial("_ajaxHelperReservations")
        <div class="tab-content" id="pills-tabContent">
            <div class="tab-pane fade show active" id="pills-home" role="tabpanel"
                 aria-labelledby="pills-home-tab">

                <div class="table-responsive with-loader">
                    <table id="UndecidedReservationTable" class="table table-bordered display" style="width: 100%;">
                        <thead>
                            <tr>
                                <th class="th-sno pl-0 text-center">@ViewData["Sno"]</th>
                                <th>Full Name</th>
                                <th>Pledged Amount (TZS)</th>
                                <th>Mobile Number</th>
                                <th>Control Number</th>
                                <th class="th-actions px-0">
                                    <div class="th-actions-div">
                                        @ViewData["Actions"]
                                    </div>
                                </th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div class="tab-pane fade" id="pills-profile" role="tabpanel" aria-labelledby="pills-profile-tab">
                <div class="table-responsive with-loader">
                    <table id="SettledReservationTable" class="table table-bordered display" style="width: 100%;">
                        <thead>
                            <tr>
                                <th class="th-sno pl-0 text-center">@ViewData["Sno"]</th>
                                <th>Full Name</th>
                                <th>Pledged Amount (TZS)</th>
                                <th>Mobile Number</th>
                                <th>Control Number</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div class="tab-pane fade" id="pills-contact" role="tabpanel" aria-labelledby="pills-contact-tab">
                <div class="table-responsive with-loader">
                    <table id="OnHoldReservationTable" class="table table-bordered display" style="width: 100%;">
                        <thead>
                            <tr>
                                <th class="th-sno pl-0 text-center">@ViewData["Sno"]</th>
                                <th>Full Name</th>
                                <th>Pledged Amount (TZS)</th>
                                <th>Mobile Number</th>
                                <th>Control Number</th>
                                <th class="th-actions px-0">
                                    <div class="th-actions-div">
                                        @ViewData["Actions"]
                                    </div>
                                </th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link href="~/Content/Site.css" rel="stylesheet" />

    <style>
        #ajaxHelperReservationForm .form-group input,
        #ajaxHelperReservationForm .form-group select,
        input.swal2-input,
        #ajaxHelperReservationForm .form-group textarea {
            max-width: 100%;
        }

        #ajaxHelperReservationForm .form-control:disabled,
        #ajaxHelperReservationForm .form-control[readonly] {
            opacity: 1;
        }

        .create-form_pre-loader {
            top: 0;
        }

        @@media (min-width: 1200px) and (max-width: 1399px) {
            @*.col-xl-2 {
                flex: 0 0 16.66667%;
                flex-shrink: 0;
                width: 16.66667%;
            }*@

            .col-xl-3_cs {
                flex: 0 0 25%;
                flex-shrink: 0;
                width: 25%;
            }
        }
    </style>
}

@section Scripts {
    <script src="~/Script/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Script/jquery.validate.min.js"></script>
    <script src="~/Script/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Script/app.js"></script>
    <script src="~/Scripts/SweetAlert2/sweetalert2.all.min.js"></script>

    <script>
        var CustomerUsersDatatable, $clickedDeleteButton;
        var $ajaxHelperCreateForm = $('#ajaxHelperCreateForm');
        var $ajaxHelperReservationForm = $('#ajaxHelperReservationForm');
        var $ajaxHelperDeleteForm = $('#ajaxHelperDeleteForm');
        var $UndecidedReservationTable= $('#UndecidedReservationTable');
        var $ajaxHelperCreateModal = $('#ajaxHelperCreateModal');
        var $ajaxHelperReservationModal = $('#ajaxHelperReservationModal');
        var $modalPreLoader = $('#modal_pre-loader');
        var $reservationWrapper = $('#accept-reservation-wrapper');

        var settledReservationDatatableInit, onHoldReservationDatatableInit;


        function openRegisterContributionsForm($reservationWrapper) {
            var $yesResersertionBtn = $('#yesResersertionBtn');
            $yesResersertionBtn.on('click', function (e) {
                e.preventDefault();

                $reservationWrapper.find('#Number_of_people').val('');
                $reservationWrapper.find('#HasReservationRequested').prop('checked', true);

            });
        }

        function closeRegisterContributionsForm($reservationWrapper) {
            var $noResersertionBtn = $('#noResersertionBtn');
            $noResersertionBtn.on('click', function (e) {
                e.preventDefault();

                $reservationWrapper.find('#Number_of_people').val(1);
                $reservationWrapper.find('#HasReservationRequested').prop('checked', false);

            });
        }

        function handleSettledReservation() {

            var settledReservationDatatable = $('#SettledReservationTable').DataTable({
                processing: true,
                deferRender: true,
                stateSave: 15,
                language: {
                    processing:
                        "<div class='d-flex justify-content-center align-items-center h-100'>"+
                        "\t<div class='ripple-pre-loader'>" +
                        "\t\t<div></div>" +
                        "\t\t<div></div>" +
                        "\t</div>"+
                        "</div>"
                },

                ajax: {
                    url: "@Url.Action("ConfirmedReservationsDataTable")",
                    type: "POST",
                    dataType: "json",
                },

                // Table serial number
                fnRowCallback: function (nRow, aData, iDisplayIndex) {
                    var oSettings = this.fnSettings();
                    $("td:first", nRow).html(oSettings._iDisplayStart + iDisplayIndex + 1);
                    return nRow;
                },

                columns: [
                    {
                        title: "Sno",
                        data: null,
                    },
                    { data: 'contributor_name', title: 'Full Name' },
                    {
                        data: 'contribution_amount', title: "Pledged Amount (TZS)",
                        render: function (data, type, row) {
                            return '<div class="text-end">'+data+'</div>';
                        }
                    },
                    { data: 'mobile_number', title: "Mobile Number" },
                    { data: 'control_number', title: "Control Number"},
                ]

            });

            return settledReservationDatatable;
        }

        function handleOnHoldReservation() {

            var unsettledReservationDatatable = $('#OnHoldReservationTable').DataTable({
                processing: true,
                deferRender: true,
                stateSave: 15,
                language: {
                    processing:
                        "<div class='d-flex justify-content-center align-items-center h-100'>"+
                        "\t<div class='ripple-pre-loader'>" +
                        "\t\t<div></div>" +
                        "\t\t<div></div>" +
                        "\t</div>"+
                        "</div>"
                },

                ajax: {
                    url: "@Url.Action("UnsettledReservationsDataTable")",
                    type: "POST",
                    dataType: "json",
                },

                // Table serial number
                fnRowCallback: function (nRow, aData, iDisplayIndex) {
                    var oSettings = this.fnSettings();
                    $("td:first", nRow).html(oSettings._iDisplayStart + iDisplayIndex + 1);
                    return nRow;
                },

                columns: [
                    {
                        title: "Sno",
                        data: null,
                    },
                    { data: 'contributor_name', title: 'Full Name' },
                    {
                        data: 'contribution_amount', title: "Pledged Amount (TZS)",
                        render: function (data, type, row) {
                            return '<div class="text-end">'+data+'</div>';
                        }
                    },
                    { data: 'mobile_number', title: "Mobile Number" },
                    { data: 'control_number', title: "Control Number"},
                    {
                        orderable: false,
                        data: null,
                        render: function (data, type, row) {

                            var id = row.contribution_id;

                             return "<div class='position-relative'>"+
                                "<div class='table-buttons justify-content-around'> " +
                                "\t<button class='btn btn-outline-info btn-sm' data-id=" + id + " data-btn-type='edit'>" +
                                "\t\t<i class='fas fa-calendar-check'></i>" +
                                "\t</button>" +
                                //"\t<button class='btn btn-outline-danger btn-sm' data-id=" + id + " data-btn-type='delete'>" +
                                //"\t\t<i class='fas fa-trash'></i>" +
                                //"\t</button>" +
                                "</div>" +
                                "<div class='justify-content-center h-100 w-100 table-preloader'>"+
                                "\t<div class='loading-swapping-wrapper'>"+
                                "\t\t<div class='loading-swapping'>"+
                                "\t\t\t<div></div>"+
                                "\t\t\t<div></div>"+
                                "\t\t\t<div></div>"+
                                "\t\t</div>"+
                                "\t</div>"+
                                "</div>"+
                                "</div>";
                        }
                    }
                ]

            });

            return unsettledReservationDatatable;
        }

        $(document).ready(function () {

            settledReservationDatatableInit = handleSettledReservation();
            onHoldReservationDatatableInit = handleOnHoldReservation();

            openRegisterContributionsForm($reservationWrapper);
            closeRegisterContributionsForm($reservationWrapper);

            CustomerUsersDatatable = $UndecidedReservationTable.DataTable({
                processing: true,
                deferRender: true,
                stateSave: 15,
                language: {
                    processing:
                        "<div class='d-flex justify-content-center align-items-center h-100'>"+
                        "\t<div class='ripple-pre-loader'>" +
                        "\t\t<div></div>" +
                        "\t\t<div></div>" +
                        "\t</div>"+
                        "</div>"
                },

                ajax: {
                    url: "@Url.Action("ReservationsDataTable")",
                    type: "POST",
                    dataType: "json",
                },

                // Table serial number
                fnRowCallback: function (nRow, aData, iDisplayIndex) {
                    var oSettings = this.fnSettings();
                    $("td:first", nRow).html(oSettings._iDisplayStart + iDisplayIndex + 1);
                    return nRow;
                },

                columns: [
                    {
                        title: "Sno",
                        data: null,
                    },
                    { data: 'contributor_name', title: 'Full Name' },
                    {
                        data: 'contribution_amount', title: "Pledged Amount (TZS)",
                        render: function (data, type, row) {
                            return '<div class="text-end">'+data+'</div>';
                        }
                    },
                    { data: 'mobile_number', title: "Mobile Number" },
                    { data: 'control_number', title: "Control Number"},
                    {
                        orderable: false,
                        data: null,
                        render: function (data, type, row) {

                            var id = row.contribution_id;

                             return "<div class='position-relative'>"+
                                "<div class='table-buttons justify-content-around'> " +
                                "\t<button class='btn btn-outline-info btn-sm' data-id=" + id + " data-btn-type='edit'>" +
                                "\t\t<i class='fas fa-calendar-check'></i>" +
                                "\t</button>" +
                                //"\t<button class='btn btn-outline-danger btn-sm' data-id=" + id + " data-btn-type='delete'>" +
                                //"\t\t<i class='fas fa-trash'></i>" +
                                //"\t</button>" +
                                "</div>" +
                                "<div class='justify-content-center h-100 w-100 table-preloader'>"+
                                "\t<div class='loading-swapping-wrapper'>"+
                                "\t\t<div class='loading-swapping'>"+
                                "\t\t\t<div></div>"+
                                "\t\t\t<div></div>"+
                                "\t\t\t<div></div>"+
                                "\t\t</div>"+
                                "\t</div>"+
                                "</div>"+
                                "</div>";
                        }
                    }
                ]

            });

            //On opening create modal clear the form fields
            resetFormFieldsOnModalClose($ajaxHelperReservationModal, $ajaxHelperReservationForm);

            OperationOnDatatableBtns();

            submitArrangeReservationForm($ajaxHelperReservationForm);
            submitCancelledReservationForm($ajaxHelperReservationForm);

        });

       @{ #region Operations On Datatable Buttons }

        function OperationOnDatatableBtns() {

            //click an update button
            $UndecidedReservationTable.on('click', 'button[data-btn-type=edit]', function (e) {
                e.preventDefault();

                $clickedUpdateButton = $(this);

                updateRecordOperation($clickedUpdateButton);
            });

            onHoldReservationDatatableInit.on('click', 'button[data-btn-type=edit]', function (e) {
                e.preventDefault();

                $clickedUpdateButton = $(this);

               updateRecordOperation($clickedUpdateButton);
            });

            //click an delete button
            $UndecidedReservationTable.on('click', 'button[data-btn-type=delete]', function (e) {
                e.preventDefault();

                $clickedDeleteButton = $(this);

                //deleteRowRecord($clickedDeleteButton);

            });
        }

        function updateRecordOperation($this) {
            var url = '@Url.Action("ReservationsDataTable", "Contributions")';
            var data_id = $this.attr('data-id');
            var tr = $this.parentsUntil('tbody').get(3);

            populateUpdateModalFormElements($(tr), data_id);

            //change form action attribute
            //$ajaxHelperReservationForm.attr('action', url);

            $ajaxHelperReservationModal.modal('show');

        }

        function populateUpdateModalFormElements($table_row, data_id) {

            var Contributor_name = $table_row.find('td').eq(1).text().trim();
            var Contribution_amount = $table_row.find('td').eq(2).text().trim();
            var Mobile_number = $table_row.find('td').eq(3).text().trim();

            $ajaxHelperReservationForm.find('#Contribution_id').val(data_id);
            $ajaxHelperReservationForm.find('#Contributor_name').val(Contributor_name);
            $ajaxHelperReservationForm.find('#Contribution_amount').val(Contribution_amount);
            $ajaxHelperReservationForm.find('#Mobile_number').val(Mobile_number);

        }

        function getSelectValueForDropdownList(optionItemText) {
            var $optinItemList = $ajaxHelperReservationForm.find('#user_type option');
            var optionItemValue = '';

            $.map($optinItemList, function (value, index) {
                if ($(value).text().trim() === optionItemText) {
                    optionItemValue = $(value).val();
                }
            });
            return optionItemValue;
        }

        @{#endregion}

        @{ #region Create--Record Section }

        function submitArrangeReservationForm($ajaxHelperReservationForm) {

            $ajaxHelperReservationForm.find('#yesResersertionBtn').on('click', function (e) {
                e.preventDefault();

                if ($(this).valid()) {
                    Swal.fire({
                        //title: 'Are you sure?',
                        text: "Do you want to add reservation for this contributor?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes!'
                    }).then((result) => {
                        if (result.isConfirmed) {

                            Swal.fire({
                                title: 'Number of People per Card',
                                input: 'text',
                                //inputLabel: 'Your IP address',
                                //inputValue: $('#Number_of_people').val(),
                                showCancelButton: true,
                                inputValidator: (value) => {

                                    var no_of_peopleRegex = new RegExp(/^[1-9]\d*$/);
                                    if (!value) {
                                        return 'Please enter number of people.'
                                    }

                                    if (!no_of_peopleRegex.test(value)) {
                                        return 'Please enter a valid input.';
                                    }

                                    $('#Number_of_people').val(value);
                                    $ajaxHelperReservationForm.submit();
                                }
                            });

                        }
                    });
                }
            });
        }

        function submitCancelledReservationForm($ajaxHelperReservationForm) {
            $ajaxHelperReservationForm.find('#noResersertionBtn').on('click', function (e) {
                e.preventDefault();

                if ($(this).valid()) {
                    Swal.fire({
                        //title: 'Are you sure?',
                        text: "Are you sure you don't want to set reservation for this contributor?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $ajaxHelperReservationForm.submit();
                        }
                    });
                }
            });
        }

        function OnBeginRequestCreate() {

            //Display preloader on modal open
            getModalPreLoader($ajaxHelperReservationModal).show();
        }

        function OnSuccessRequestCreate(data) {

            if (data.loginStatus == false) {
                window.location.replace('@Url.Action("CustomerLogin", "Login")');
            }

            //Hide modal pre-loader after closing the modal
            getModalPreLoader($ajaxHelperReservationModal).hide();

            CustomerUsersDatatable.ajax.reload();

            settledReservationDatatableInit.ajax.reload();
            onHoldReservationDatatableInit.ajax.reload();

            $ajaxHelperReservationModal.modal('hide');

            if (data.createStatus) {
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'success',
                    title: data.response
                })
            } else {
                    Swal.fire(
                        '',
                        data.response,
                        'error'
                    )
            }

            //Reset form fields
            resetFormFields($ajaxHelperReservationForm);

        }

        function OnFailureRequestCreate() {

            //Hide modal pre-loader after closing the modal
            getModalPreLoader($ajaxHelperReservationModal).hide();

            $ajaxHelperReservationModal.modal('hide');

            //Reset form fields
            resetFormFieldsOnModalClose($ajaxHelperReservationModal, $ajaxHelperReservationForm);
        }

        @{ #endregion}

        /**
         * *This function clears form field of a specific
         *
         * @@param form specific form Element
         */
        function resetFormFields(form) {
            form.find('#Number_of_people').val('');
            form.find('#HasReservationRequested').prop('checked', false)
        }

        function resetFormFieldsOnModalClose(modal, form) {
            modal.on('hidden.bs.modal', function () {
                resetFormFields(form);
                validateFormElementsOnModalClose(form);
            });
        }

        function getModalPreLoader(modal) {
            return modal.find('.modal_pre-loader');
        }

        function validateFormElementsOnModalClose(form) {
            var $field = form.find('.input-validation-error');
            var $spanErrorWrapper = form.find('.field-validation-error')

            //Validate the field
            $field.removeClass('input-validation-error').addClass('valid');
            $field.attr('aria-invalid', 'false');

            //Validate the span error wrapper and remove the span error message
            $spanErrorWrapper.removeClass('field-validation-error').addClass('field-validation-valid');
            $spanErrorWrapper.empty();
        }
    </script>
}


