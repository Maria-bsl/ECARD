@model FUNDING.Models.CollectionModule.Contributions

@{
    AjaxOptions updateContributionsAjaxOptions = new AjaxOptions();
    updateContributionsAjaxOptions.HttpMethod = "POST";
    //updateContributionsAjaxOptions.UpdateTargetId = "divCustomers";
    updateContributionsAjaxOptions.OnBegin = "OnBeginRequestUpdate";
    updateContributionsAjaxOptions.OnSuccess = "OnSuccessRequestUpdate";
    //updateContributionsAjaxOptions.OnComplete = "OnCompleteRequestUpdate";
    updateContributionsAjaxOptions.OnFailure = "OnFailureRequestUpdate";
    //updateContributionsAjaxOptions.Confirm = "Do you want to update contribution details?";
}

@using (Ajax.BeginForm(actionName: "UpdateCashCollections", controllerName: "Contributions", routeValues: null,
    ajaxOptions: updateContributionsAjaxOptions, htmlAttributes: new { id = "ajaxHelperUpdateForm", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    @Html.TextBoxFor(model => model.Int_Mobile_number, new { @class = "d-none" })

    <!-- Modal -->
    <div class="modal fade" id="ajaxHelperUpdateModal" tabindex="-1" role="dialog" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="ajaxHelperUpdateLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-xl">
            <div id="divCustomers" class="modal-content position-relative">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Update Contribution Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    </button>
                </div>
                <div class="modal-body">

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        @Html.HiddenFor(model => model.Contribution_id)
                        @Html.Hidden("Mobile_number_clone")

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Contributor_name, htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2 col-xl-3_cs" })
                            <div class="col-sm-8 col-lg-9 col-xl-10">
                                @Html.EditorFor(model => model.Contributor_name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Contributor_name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @{ Html.EnableClientValidation(false); }
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Contribution_amount, htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2 col-xl-3_cs" })
                            <div class="col-sm-8 col-lg-9 col-xl-10">
                                @Html.EditorFor(model => model.Contribution_amount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Contribution_amount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @{ Html.EnableClientValidation(true); }

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Mobile_number, htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2 col-xl-3_cs" })
                            <div class="col-sm-8 col-lg-9 col-xl-10">
                                @Html.EditorFor(model => model.Mobile_number, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mobile_number, "", new { @class = "text-danger" })
                                <span id="error-msg" class="d-none text-danger"></span>
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Email_address, htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2 col-xl-3_cs" })
                            <div class="col-sm-8 col-lg-9 col-xl-10">
                                @Html.EditorFor(model => model.Email_address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email_address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button id="submitupdateContributions" type="submit" class="btn btn-outline-info btn-rounded">Update</button>
                    <button type="button" class="btn btn-outline-danger btn-rounded" data-bs-dismiss="modal">Close</button>
                </div>
                <div class="position-absolute w-100 h-100 modal_pre-loader">
                    <div style="display: flex;" sy class='justify-content-center align-items-center h-100'>
                        <div class='ripple-pre-loader'>
                            <div></div>
                            <div></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}