@model FUNDING.Models.Participate
@{
    ViewBag.Title = "Participate";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <meta name="Description" content="Enter your description here" />
    @*<script src="/js/jquery.min.js"></script>*@
    <link rel="stylesheet" href="~/assets/bootstrap-4.5.3-dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/assets/fontawesome-free-5.15.3-web/css/all.min.css">
    <link rel="stylesheet" href="~/css/login-style.min.css">
    <link rel="stylesheet" href="~/css/custom.css">
    <script src="~/assets/scripts/jQuery.min.js"></script>
    <title>Participants | B-envit</title>
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">

    <link rel="stylesheet" href="~/assets/datepicker/gijgo.min.css">
    <style>
        .login-box .card {
            width: 100%;
            max-width: 45.125rem;
            -webkit-box-shadow: 0 2px 1px rgba(0, 0, 0, 0.05);
            box-shadow: 0 2px 1px rgba(0, 0, 0, 0.05);
        }

        div.footer {
            height: 100px;
        }

            div.footer p {
                font-size: 0.75rem;
            }

        .co-operate--wrapper {
            width: 60px;
            height: 60px;
        }

        .co-operate-logo--wrapper {
            background: url('../../images/Biz-Logic Round Logo.png');
            background-position: center;
            background-size: contain;
            background-repeat: no-repeat;
            width: 100%;
            height: inherit;
        }
        .gj-picker-bootstrap .selected

        {
            color: #4F4F4F;
        }

        .gj-picker-bootstrap .selected[role=am],
        .gj-picker-bootstrap .selected[role=pm] {
            font-weight: 500;
        
        }
    </style>
</head>

<body>

    <div class="container-fluid px-0">
        <div class="row mx-0">
            <div class="main-area col-12 px-0">
                <div class="login-box">
                    <div class="card border-grey border-lighten-3 m-0 ">
                        <div class="card-header border-0 bg-white pb-1">
                            <div class="card-title text-center">
                                <div class="p-1">
                                    <img class="img-thumbnail mt-4" src="~/images/logo_placeholder.png" alt="branding logo" />
                                </div>
                            </div>
                            <h1 class="card-subtitle line-on-side h5 text-muted text-center text-uppercase">
                                <span>B-Envit</span>
                            </h1>
                        </div>

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4 class="text-center">Participants</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @* <div class="form-group">
                @Html.LabelFor(model => model.pat_sno, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.pat_sno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.pat_sno, "", new { @class = "text-danger" })
                </div>
        </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.fullname, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.fullname, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.fullname, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.phone_number, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.phone_number, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.phone_number, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.gender, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.dob, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="text" id="dob" name="dob" class="form-control" data-val="true" />
                                @* @Html.EditorFor(model => model.dob, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.dob, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.region, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.region, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.region, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.district, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.district, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.district, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group row">
                            @Html.LabelFor(model => model.entrepreneur_status, htmlAttributes: new { @class = "col-form-label col-md-4 col-lg-4 col-xl-3" })
                            <div class="col-md-8 col-lg-8 col-xl-9">
                                @Html.DropDownListFor(model => model.entrepreneur_status, ViewBag.entrepreneur as IEnumerable<SelectListItem>, "Select Entrepreneurship Status", htmlAttributes: new { @class = "form-control" })

                                @* @Html.EditorFor(model => model.ward, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.entrepreneur_status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.opportunity, htmlAttributes: new { @class = "col-form-label col-md-4 col-lg-4 col-xl-3" })
                            <div class="col-md-8 col-lg-8 col-xl-9">
                                @Html.DropDownList("", ViewBag.opportunity as IEnumerable<SelectListItem>, htmlAttributes: new { @multiple = "multiple", @id = "opportunity", @class = "form-control multiple" })

                                @* @Html.EditorFor(model => model.ward, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.opportunity, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.business_sector, htmlAttributes: new { @class = "col-form-label col-md-4 col-lg-4 col-xl-3" })
                            <div class="col-md-8 col-lg-8 col-xl-9">
                                @Html.DropDownList("", ViewBag.business as IEnumerable<SelectListItem>, htmlAttributes: new { @multiple = "multiple", @id = "business_sector", @class = "form-control multiple" })

                                @* @Html.EditorFor(model => model.ward, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.business_sector, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" id="patsubmit" class="btn btn-primary btn-rounded" />
                            </div>
                        </div>
                    </div>
                        }

                        <div class="text-center">
                            @*@Html.ActionLink("Back Home", "Login")*@
                            <a href="/">Return to Login Page</a>
                        </div>

                    </div>
                </div>
                <div class="footer px-2">
                    <p class="mb-0">
                        Designed &amp; Developed by
                        <a class="links" href="http://bizlogicsolutions.com/" target="_blank">Biz-Logic Solutions Ltd.</a>
                    </p>
                    <div class="co-operate--wrapper">
                        <div class="co-operate-logo--wrapper"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="~/assets/popperjs-1.16.1/popper.min.js"></script>
    <script src="~/assets/bootstrap-4.5.3-dist/js/bootstrap.min.js"></script>
    <script src="~/Script/bootstrap-notify.min.js"></script>
    <script src="~/assets/datepicker/gijgo.min.js"></script>
    <script src="~/js/validations.js"></script>
    <script src="~/js/main.js"></script>


    <script>
        $(document).ready(function () {
            $("#patsubmit").click(function (e) {
                e.preventDefault();
                addReg();
            });

        });

                $('#dob').change(function () {
                    var dob = new Date($(this).val());
                    var minAge = 15;
                    var minDate = new Date();
                    minDate.setFullYear(minDate.getFullYear() - minAge);

                    if (dob > minDate) {
                        alert('Age must be at least ' + minAge + ' years old.');
                        $(this).val(''); // Clear the input field
                    }
                });

        $('#phone_number').change(function () {
            var phone_number = $(this).val();
            var minAge = 9;
            var minDate = new Date();
            minDate.setFullYear(minDate.getFullYear() - minAge);

            if (phone_number <= minAge) {
                alert('Phone number must be at least ' + minAge + ' number');
                //$(this).val(''); // Clear the input field
            }
        });


    function initDatePicker($form) {
    var $eventDate = $form.find('#dob');
    //var $timepicker = $form.find('#Event_Start_Time');

    $eventDate.datepicker({
    //format: 'dd/mm/yyyy',
    format: 'dddd, dd mmmm yyyy',
    //calendarWeeks: true,
    uiLibrary: 'bootstrap4',
    iconsLibrary: 'fontawesome',
    modal: true,
    header: true,
    footer: true,
    });

    $timepicker.timepicker({
    format: 'h:MM TT',
    //calendarWeeks: true,
    uiLibrary: 'bootstrap4',
    iconsLibrary: 'fontawesome',
    //modal: false,
    //header: false,
    //footer: false,
    icons: {
    rightIcon: '<i class="far fa-clock"></i>'
    }
    });
    }

    function addReg() {

    var message = validateEmployeeoff(),
    type = '';
    if (message.length > 0) {
    notifyMessage(message, 'danger');
    }
    else {
    var params = JSON.stringify(getSMTPValues());
    console.log(params);
    //$.noConflict();
    $.ajax({
    type: 'POST',
    url: '@Url.Action("Register", "Participate")',
    data: params,
    contentType: 'application/json; charset=utf-8',
    dataType: 'json',
    success: function (data) {

    if (data != null) {
    console.log(data)
    //alert(data);

    notifyMessage(data.message, 'success');
    @*
        if (data.data == "true") {
            alert(data.message);
            notifyMessage(data.message, 'success');
            // window.location.href = '@Url.Action("Updatepwd", "Updatepwd")?type =' + data.check + '&Instid =' + data.InstID + '&Usersno =' + data.Usno;
        }*@

    @*else if (data.status == 1) {


            populateEventSelections(data, $eventDropdownList);

            $('#eventModal').modal('show');
        }
        else {
            message = data.message;
            notifyMessage(message, 'danger');
        }*@

    }
    }
    });
    }
    }


    function getSMTPValues() {

    var fullname = document.getElementById('fullname');
    var gender = document.getElementById('gender');

    var dob = document.getElementById('dob');
    var phone = document.getElementById('phone_number');
    var region = document.getElementById('region');
    var district = document.getElementById('district');

        var ward = $("#opportunity").val();
        var business = $("#business_sector").val();
        var entre = $("#entrepreneur_status").val();

        var data = {
            fullname: fullname.value,
            gender: gender,
            dob: dob.value,
            phone_number: phone.value,
            region: region,
            district: district,
            opportunity: ward,
            business_sector: business,
            entrepreneur_status: entre,

    }

    return data;
    }

    function validateEmployeeoff() {

    var fullname = document.getElementById('fullname');
    var gender = document.getElementById('gender');

    var dob = document.getElementById('dob');
    var phone = document.getElementById('phone_number');
    var region = document.getElementById('region');
    var district = document.getElementById('district');
    var ward = document.getElementById('oportunity');

    result = '';

    if (phone.value.length == 0) {
    result += 'Mobile Number is Required.<br />';
    }

    if (!checkValidMobileNumber(phone.value)) {
    result += 'Please enter valid mobile number.<br />';
    }
    if (fullname.value.length == 0) {
    result += 'Name is Required.<br />';
    }
    @*if (gender.value.length == 0) {
            result += 'Gender is Required.<br/>';
        }*@

    return result;
    }

    function checkValidMobileNumber(mobileNumber) {
    var mobileNumberRegex = mobileNumber.match("^[0-9]{10}$");
    return (mobileNumberRegex != null) ? true : false;
    }


    function refreshPageOnModalClose() {
    $('#eventModal').on('hidden.bs.modal', function () {

    clearEventSelectionsOptions($eventDropdownList);

    location.reload();
    });
    }

    function populateEventSelections(data, $eventDropdownList) {

    clearEventSelectionsOptions($eventDropdownList);

    var userEventDetails = data.eventDetails;

    $eventDropdownList.append("<option value=''>Select event</option>");

    $.each(userEventDetails, function (index, value) {
    $eventDropdownList.append("<option value='" + value.event_det_sno + "'>" + value.event_name+"</option>");
    });

    }

    function clearEventSelectionsOptions($eventDropdownList) {
    $eventDropdownList.empty();
    }



    </script>
</body>

</html>