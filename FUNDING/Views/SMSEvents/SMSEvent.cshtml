@model FUNDING.Models.Notifications.WhatsAppNotification
@{
    ViewBag.Title = "SMSEvent";
    Layout = "~/Views/Shared/Funding.cshtml";

    ViewData["Title"] = "Event Text SMS";
    ViewData["Home"] = "Home";
    ViewData["Bct"] = "Add SMS Template";

    //Table header labels

    ViewData["Bclo"] = "Close";

    ViewData["Bsav"] = "Save";
    ViewData["Sno"] = "Sno";

    ViewData["Actions"] = "Actions";

    ViewBag.EmptyIenumerable = new List<SelectListItem>();
}


<div class="row page-titles">
    <div class="col-md-5 align-self-center">
        <h4 class="text-themecolor">@ViewData["Title"]</h4>
    </div>
    <div class="col-md-7 align-self-center text-end">
        <div class="d-flex justify-content-end align-items-center">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Setup", "Setup")">@ViewData["hom"]</a>
                </li>
                <li class="breadcrumb-item active">@ViewData["Title"]</li>
            </ol>
        </div>
    </div>
</div>

<div class="card border-0">
    <div class="card-body">

        <h5 class="card-title" id="lblem">@ViewData["smstxt"]</h5>
        <div class="form-group text-end">
            <button type="button" id="btnAdd" value="Add" data-sid="0" class="btn btn-outline-primary btn-rounded"
                    onclick="showSMTPModal(this);" data-toggle="modal" data-target="#modal-smtp">
                <i class="fas fa-plus"></i>
                @ViewData["Bct"]
            </button>
            <input type="hidden" id="hdnEmployee" />
        </div>
        <hr />
        <div class="table-responsive">
            <table id="tbl-smtp" class="table table-bordered rounded email-table display">
                <thead>
                    <tr>
                        <th class="sno-th">@ViewData["Bsno"]</th>
                        <th class="">Event Name </th>
                        <th>Event SMS Text</th>
                        <th class="setup_2_actions" data-sort-ignore="true">Actions</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>

    </div>

</div>
<div class="modal fade" id="modal-smtp" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog believerModal modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="lblem1">SMS Invitation Text</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <form class="col-12 p-0 mx-auto" action="" method="post">
                <div class="modal-body">
                    <div class="row">
                        <div class="form-group col-sm-12 col-md-10 col-lg-6 mb-3">
                            @Html.LabelFor(model => model.Event_Id, htmlAttributes: new { @class = "d-block mb-1" })
                            @Html.DropDownListFor(model => model.Event_Id, ViewBag.EventDropDownList as IEnumerable<SelectListItem>, "Select event", new { @class = "form-control mw-100" })
                            @Html.ValidationMessageFor(model => model.Event_Id, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-12 col-lg-8 mb-3">
                        @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "d-block mb-1" })
                        @Html.TextAreaFor(model => model.Message, new { type = "text", @class = "form-control mw-100", @placeholder = "ID: {qr_code}. {invitee_name} karibu katika {event_name}, {event_date},{event_venue} kuanzia {event_time}, Dar es Salaam.", @rows="5", @title= "{qr_code}. {invitee_name} , {invitee_name} is a must" })
                        @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                        <input type="hidden" class="form-control  hidden" id="txtSID">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-info btn-rounded" id="btnSubmit">Save</button>
                    <button type="button" class="btn btn-outline-danger btn-rounded" data-dismiss="modal">Close</button>
                </div>
            </form>

        </div>
    </div>
</div>



@section styles{
    <link href="~/Scripts/intl-tel-input/css/isValidNumber.css" rel="stylesheet" />
    <link href="~/Scripts/intl-tel-input/css/intlTelInput.min.css" rel="stylesheet" />
    <link href="~/select2/css/select2.min.css" rel="stylesheet" />

    <style>
        form label {
            margin-bottom: .25rem;
        }

        .email-table td:nth-last-of-type(2),
        .email-table td:nth-last-of-type(3) {
            white-space: normal;
            min-width: 75vw;
        }

        @@media(min-width:48em) {

            .email-table td:nth-last-of-type(2),
            .email-table td:nth-last-of-type(3) {
                white-space: normal;
                min-width: 500px;
            }
        }


        .select2-dropdown {
            z-index: 1078 !important;
        }

        .select2.select2-container.select2-container--default,
        .iti.iti--allow-dropdown.iti--separate-dial-code {
            width: 100% !important;
        }

        .select2-container--default .select2-selection--single .select2-selection__arrow,
        .select2-container .select2-selection--single {
            height: 38px !important;
        }

        .select2-container--default .select2-selection--single .select2-selection__rendered {
            line-height: 38px;
        }

        .button-text.on-submit {
            visibility: hidden !important;
        }

        .typing-loader {
            width: 6px;
            height: 6px;
            -webkit-animation: line 1s linear infinite alternate;
            -moz-animation: line 1s linear infinite alternate;
            animation: line 1s linear infinite alternate;
            position: absolute;
            top: 50%;
            left: 20px;
            transform: translateY(-50%);
            display: none;
        }

        @@-webkit-keyframes line {
            0% {
                background-color: #03A9F3;
                box-shadow: 12px 0px 0px 0px #C7EBFC, 24px 0px 0px 0px #C7EBFC;
            }

            25% {
                background-color: #57C5F7;
                box-shadow: 12px 0px 0px 0px #57C5F7, 24px 0px 0px 0px #C7EBFC;
            }

            75% {
                background-color: #57C5F7;
                box-shadow: 12px 0px 0px 0px #C7EBFC, 24px 0px 0px 0px #57C5F7;
            }
        }

        @@-moz-keyframes line {
            0% {
                background-color: #03A9F3;
                box-shadow: 12px 0px 0px 0px #C7EBFC, 24px 0px 0px 0px #C7EBFC;
            }

            25% {
                background-color: #57C5F7;
                box-shadow: 12px 0px 0px 0px #57C5F7, 24px 0px 0px 0px #C7EBFC;
            }

            75% {
                background-color: #57C5F7;
                box-shadow: 12px 0px 0px 0px #C7EBFC, 24px 0px 0px 0px #57C5F7;
            }
        }

        @@keyframes line {
            0% {
                background-color: #03A9F3;
                box-shadow: 12px 0px 0px 0px #C7EBFC, 24px 0px 0px 0px #C7EBFC;
            }

            25% {
                background-color: #57C5F7;
                box-shadow: 12px 0px 0px 0px #57C5F7, 24px 0px 0px 0px #C7EBFC;
            }

            75% {
                background-color: #57C5F7;
                box-shadow: 12px 0px 0px 0px #C7EBFC, 24px 0px 0px 0px #57C5F7;
            }
        }
    </style>

}


@section scripts{

    <script type="text/javascript">

        jQuery(document).ready(function () {
            // getaccess();
            bindSMSEvent();
            $("#btnSubmit").click(function () {
                addSMSEvent();
                //jQuery("#tbl-smtp tbody").empty();
            })
            $("#btnDelete").click(function () {
                delSMSEvent();
            });

            changeVisitorByEvent.eventAction();

            $('#Event_Id').select2();
            $('#Visitor_Id').select2();
        });


    var glob;
    function binddata(val) {
        var name = '';
        if (val == 1) {
            name = "On Registration";
        }
        else if (val == 2) {
            name = "On Approve";
        }
        else if (val == 3) {
            name = "On Return";
        }
        else if (val == 5) {
            name = "OTP Activation";
        }
    }


        var changeVisitorByEvent = (function () {
            function MaintainEventVisitors() {
                this.eventDropdownList = $("#Event_Id");
                this.visitorDropdownList = $('#Visitor_Id');

                this.eventAction = function () {
                    onEventDropdownListChange(this.eventDropdownList, this.visitorDropdownList)

                    this.visitorDropdownList.on('change', function(){
                        var visitor_data = $(this).val();

                        updateValidationMessage($(this), visitor_data);
                    })
                }
            }


            function onEventDropdownListChange($eventDropdownList, $visitorDropdownList) {
                $eventDropdownList.on('change', function () {
                    var event_data = $(this).val();

                    updateValidationMessage($eventDropdownList, event_data);

                    if (event_data.length > 0) {
                        $.ajax({
                            // the server script you want to send your data to
                            'url': '@Url.Action("OnEventChangeAction")',
                            // all of your POST/GET variables
                            'data': { "Event_Id": event_data },
                            // you may change this to GET, if you like...
                            'type': 'post',
                            // the kind of response that you want from the server
                            'dataType': 'html',
                            'beforeSend': function () {
                                // anything you want to have happen before sending the data to the server...
                                // useful for "loading" animations
                            }
                        })
                            .done(function (response) {
                                var data = JSON.parse(response);

                                updateVisitorDropdownListOnEventDropdownListChange($visitorDropdownList, data.data_value);

                                // what you want to happen when an ajax call to the server is successfully completed
                                // 'response' is what you get back from the script/server
                                // usually you want to format your response and spit it out to the page
                            })
                            .fail(function (code, status) {
                                // what you want to happen if the ajax request fails (404 error, timeout, etc.)
                                // 'code' is the numeric code, and 'status' is the text explanation for the error
                                // I usually just output some fancy error messages
                            })
                            .always(function (xhr, status) {
                                // what you want to have happen no matter if the response is success or error
                                // here, you would "stop" your loading animations, and maybe output a footer at the end of your content, reading "done"
                            });
                    } else {
                        updateVisitorDropdownListOnEventDropdownListChange($visitorDropdownList, [])
                    }
                });
            }

            function updateValidationMessage($dropdownlist, event_data) {

                if (event_data.length> 0) {
                    $dropdownlist.siblings('.field-validation-error').hide();
                } else {
                    $dropdownlist.siblings('.field-validation-error').show();
                }
            }

            function updateVisitorDropdownListOnEventDropdownListChange($visitorDropdownList, data) {
                var $defaultOption = '<option value="">Select invitee</option>';

                $visitorDropdownList.empty();

                $visitorDropdownList.append($defaultOption);

                if (data != null && data.length > 0) {
                    $.each(data, function (index, visitor) {
                        $visitorDropdownList.append('<option value="' + visitor.visitor_det_sno + '">' + visitor.visitor_name + '</option>');
                    });
                }

            }

            return new MaintainEventVisitors();
        })();


    function bindSMSEvent() {

        jQuery.ajax({
            type: 'POST',
            url: '@Url.Action("GetSMSEventDetails", "SMSEvents")',
            data: '{}',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {
                jQuery("#tbl-smtp tbody").empty();
                if (jQuery.fn.DataTable.isDataTable("#tbl-smtp")) {
                    jQuery('#tbl-smtp').DataTable().clear().destroy();
                }
                if (data != 0) {
                    var count = 1;
                    jQuery.each(data, function (key, value) {

                        var row = '<tr>' +
                            '<td>' + count + '</td>' +
                            '<td>' + value.event_name + '</td>' +
                            '<td>' + value.sms_text + '</td>' +
                            '<td class="px-2"><button class="btn btn-outline-secondary btn-sm" data-toggle="modal" id = "btn' + value.sno + '"  data-sid="' + value.sno + '" value = "Edit" data-target="#modal-smtp" onclick = "showSMTPModal(this)" ><i class="fas fa-pen"></i></button >&nbsp;&nbsp;<button id = "btn' + value.sno + '"  data-sid="' + value.sno + '" value = "Delete" onclick="showSMTPModal(this)" class="btn btn-outline-dark btn-sm distloc"><i class="fas fa-trash" aria-hidden="true"></i></button ></td > ' +
                            '</tr>';
                        count++;
                        jQuery("#tbl-smtp tbody").append(row);
                    });
                }
                applyDatatable('tbl-smtp');
            }
        })
    }
        function addSMSEvent() {
        var message = validateEmployee(),
            type = '',
            opType = jQuery("#hdnEmployee").val();
        if (message.length > 0 && opType != 'D') {
            notifyMessage(message, 'danger');
        }
        else {
            var params = JSON.stringify(getSMSEventValues());
            jQuery.ajax({
                type: 'POST',
                url: '@Url.Action("AddSMSEvent", "SMSEvents")',
                data: params,
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function (data) {

                    $('#modal-smtp').hide();

                    var ddlflow = document.getElementById('Event_Id');
                    var text = ddlflow.options[ddlflow.selectedIndex].text;
                    if (opType == 'C' && data) {
                        @*if (data == true) {
                            message = text + ' Already Exist.';
                            type = 'danger';
                        }
                        else {*@
                            message = text + ' Event SMS Text Successfully Created';
                            type = 'success';
                        //}
                    }
                    else if (opType == 'U' && data) {
                        message = text + ' Event SMS Text Successfully Updated';
                        type = 'success';
                    }

                    $('.modal-backdrop').hide();
                    notifyMessage(message, type);
                    bindSMSEvent();
                }
            })
        }
    }
    function deletebranch(cid, st) {
        type = '',
            opType = jQuery("#hdnEmployee").val();

        var ddlflow = document.getElementById('Event_Id');
        var params = JSON.stringify(getSMTPID(cid));
        jQuery.ajax({
            type: 'POST',
            url: '@Url.Action("DeleteSMSEvent", "SMSEvents")',
            data: JSON.stringify({ 'sno': txtSID.value }),
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {

                if (opType == 'D') {
                    if (data == true) {

                        message = st + ' is in use Cannot be Deleted.';
                        type = 'danger';

                    } else {
                        message = st + ' Event SMS text Successfully Deleted';
                        type = 'success';
                    }
                }
                notifyMessage(message, type);
                bindSMSEvent();
            }
        })

        }

    var cid;
    var check;
    var jk = false;
    function valid(e) {
        jk = true;
    }
    //var today, datepicker;
    //today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());

    //$('#txtdate').datepicker({
    //    uiLibrary: 'bootstrap4',
    //    format: 'dd/mm/yyyy',
    //    iconsLibrary: 'fontawesome',
    //    weekStartDay: 1,
    //});

    function resetSMTPsms() {
        var txttext = document.getElementById('Message');
        var ddlflow = document.getElementById('Event_Id');
        ddlflow.selectedIndex = 0;
        txttext.value = '';
        }

    function showSMTPModal(e) {
        var txttext = document.getElementById('Message');
        var ddlflow = document.getElementById('Event_Id');
        txtSID = document.getElementById('txtSID');
        var tblemployee = document.getElementById('tbl-smtp'),
            rows = tblemployee.rows,
            hdnEmployee = document.getElementById('hdnEmployee');
        if (e.value.indexOf('Edit') > -1) {
            jQuery("#btnSubmit").html("Update");
            for (var i = 0, row = null; i < rows.length; i++) {
                row = rows[i];

                if (row.cells[3].innerHTML.indexOf(e.id) > -1) {
                    txtSID.value = jQuery(e).data('sid');
                    ddlflow.value = row.cells[1].innerHTML;
                    txttext.value = row.cells[2].innerHTML;
                    @*txtloc.value = row.cells[6].innerHTML;*@
                    break;
                }
            }
            hdnEmployee.value = 'U';
        }
        else if (e.value.indexOf('Add') > -1) {
            resetSMTPsms();
            jQuery("#btnSubmit").html("Save");
            hdnEmployee.value = 'C';
        }
        else if (e.value.indexOf('Delete') > -1) {
            for (var i = 0, row = null; i < rows.length; i++) {
                row = rows[i];
                if (row.cells[3].innerHTML.indexOf(e.id) > -1) {
                    txtSID.value = jQuery(e).data('sid');
                    hdnEmployee.value = 'D';
                    var result = confirm("Are you sure you want to delete?");
                    if (result) {
                        var st = row.cells[1].innerHTML;
                        deletebranch(txtSID.value, st);
                    }
                }
            }
        }
    }

    function getSMSEventValues() {
        var txttext = document.getElementById('Message');
      @*  var ddlflow = document.getElementById('ddlflow');
        var txtsub = document.getElementById('txtsub');
        var txtsubloc = document.getElementById('txtsubloc');*@
        txteven = document.getElementById('Event_Id');
        txtSID = document.getElementById('txtSID'),

            hdnEmployee = document.getElementById('hdnEmployee');
        if (txtSID.value == '') {
            txtSID.value = '0';
        }

        var table = jQuery('#tbl-smtp').DataTable(),
            selectedRow = table.rows('.selected').data();
        if (hdnEmployee.value == "C") {
            txtSID.value = '0';
            jk = false;
            var data = {
                Message: txttext.value.trim(),
                Event_Id: document.getElementById('Event_Id').value,
                sno: txtSID.value,
            }
            return data;
        }
        else if (hdnEmployee.value == "U") {

            var data = {
                Message: txttext.value.trim(),
                Event_Id: document.getElementById('Event_Id').value,
                sno: txtSID.value,
            }
            return data;
        }
    }
    function getSMTPID(glob) {
        var table = jQuery('#tbl-smtp').DataTable(),
            selectedRow = table.rows('.selected').data();
        if (hdnEmployee.value == "D") {
            var data = {
                sno: glob,
            }
            return data;
        }
    }
    function validateEmployee() {
        var txttext = document.getElementById('Message');
        var ddlflow = document.getElementById('Event_Id');@*
        var txtsub = document.getElementById('txtsub');*@
        result = '';
        if (ddlflow.value == 0) {
            result += 'Event is Required .<br/>';
        }
        if (txttext.value.trim().length == 0) {
            result += ' SMS Event Text is Required.<br/>';
        }
        return result;
    }
    </script>


    <script src="~/Script/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Script/jquery.validate.min.js"></script>
    <script src="~/Script/moment.min.js"></script>
    <script src="~/Script/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/intl-tel-input/js/intlTelInput-jquery.min.js"></script>
    <script src="~/Scripts/intl-tel-input/js/intlTelInput.js"></script>
    @*<script src="~/assets/semantic.ui/semantic.min.js"></script>*@
    <script src="~/Scripts/SweetAlert2/sweetalert2.all.min.js"></script>
    <script src="~/select2/js/select2.min.js"></script>


}

