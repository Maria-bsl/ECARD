@model FUNDING.Models.Notifications.WhatsAppNotification

@{
    ViewBag.Title = "WhatsAppNotification";
    Layout = "~/Views/Shared/Funding.cshtml";

    ViewData["Title"] = "WhatsApp Notification";
    ViewData["Home"] = "Home";
    ViewData["Bct"] = "Add Template";

    //Table header labels
    ViewData["Sno"] = "Sno";

    ViewData["Actions"] = "Actions";

    #region Ajax Options Section

    AjaxOptions ajaxOptions = new AjaxOptions();
    ajaxOptions.HttpMethod = "POST";
    //ajaxOptions.CreateTargetId = "divEventDetails";
    ajaxOptions.OnBegin = "OnBeginRequestCreate";
    ajaxOptions.OnSuccess = "OnSuccessRequestCreate";
    //ajaxOptions.OnComplete = "OnCompleteRequestCreate";
    ajaxOptions.OnFailure = "OnFailureRequestCreate";
    // ajaxOptions.Confirm = "Do you want to update event?";

    #endregion;


    ViewBag.EmptyIenumerable = new List<SelectListItem>();

}

<div class="row page-titles">
    <div class="col-md-5 align-self-center">
        <h4 class="text-themecolor">@ViewData["Title"]</h4>
    </div>
    <div class="col-md-7 align-self-center text-end">
        <div class="d-flex justify-content-end align-items-center">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Dashboard", "CustomerActivity")">@ViewData["Home"]</a>
                </li>
                <li class="breadcrumb-item active">@ViewData["Title"]</li>
            </ol>
        </div>
    </div>
</div>
<div class="card border-0">
    <div class="card-body">
      @*  @using (Ajax.BeginForm(actionName: "WhatsAppNotification", controllerName: "CardDesignMaster", routeValues: null,
    ajaxOptions: ajaxOptions, htmlAttributes: new { id = "ajaxHelperCreateForm", autocomplete = "off" }))
        {*@
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.AntiForgeryToken()

                <div class="row">
                    <div class="form-group col-sm-9 col-md-6 col-lg-4 mb-3">
                        @Html.LabelFor(model => model.Event_Id, htmlAttributes: new { @class = "d-block mb-1" })
                        @Html.DropDownListFor(model => model.Event_Id, ViewBag.EventDropDownList as IEnumerable<SelectListItem>, "Select event", new { @class = "form-control mw-100" })
                        @Html.ValidationMessageFor(model => model.Event_Id, "", new { @class = "text-danger" })
                    </div>
                        <div class="text-end col-lg-8">
                            <button id="submitCreateCustomersAll" type="submit" class="btn btn-outline-warning btn-rounded position-relative">
                                <span class="button-text">Send All</span>
                                <div class="typing-loader"></div>
                            </button>
                       </div>
                    </div>
                    <hr class="mt-0" />
                    <div class="row">
                        <div class="form-group col-sm-9 col-md-6 col-lg-4 mb-3">
                            @Html.LabelFor(model => model.Visitor_Id, htmlAttributes: new { @class = "d-block mb-1" })
                            @Html.DropDownList("Visitor_Id", ViewBag.EmptyIenumerable as IEnumerable<SelectListItem>, "Select invitee", new { @multiple = "multiple", @class = "form-control mw-100" })
                            @Html.ValidationMessageFor(model => model.Visitor_Id, "", new { @class = "text-danger" })
                        </div>

                        @* <div class="form-group col-sm-9 col-md-6 col-lg-4 mb-3">
                                @Html.LabelFor(model => model.WhatsAppNumber, htmlAttributes: new { @class = "d-block mb-1" })
                                @Html.TextBox("mobileNumber", null, new { @class = "form-control mw-100" })
                                <span class="text-danger field-validation-error">
                                    <span id="intl-input-error"></span>
                                </span>
                                @Html.HiddenFor(model => model.WhatsAppNumber)
                            </div>*@

                        @*{visitor_name} you welcomed to {event_name} which will be held at {venue} on {event_date} starting at {event_start_time}. Your Id is {qr_code}*@

                        @* <div class="form-group col-md-12 col-lg-8 mb-3">
                                @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "d-block mb-1" })
                                @Html.TextAreaFor(model => model.Message, new { type = "text", @class = "form-control mw-100" })
                                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                            </div>
                        *@
                        <div class="text-end col-lg-8">
                            <button id="submitCreateCustomers" type="submit" class="btn btn-outline-info btn-rounded position-relative">
                                <span class="button-text">Send Individual</span>
                                <div class="typing-loader"></div>
                            </button>
                            @*<button type="reset" class="btn btn-outline-danger btn-rounded" data-bs-dismiss="modal">Clear</button>*@
                        </div>
                    </div>
                </div>
       @* }*@
    </div>
</div>


@section styles{
    <link href="~/Scripts/intl-tel-input/css/isValidNumber.css" rel="stylesheet" />
    <link href="~/Scripts/intl-tel-input/css/intlTelInput.min.css" rel="stylesheet" />
    <link href="~/select2/css/select2.min.css" rel="stylesheet" />

    <style>
        .select2.select2-container.select2-container--default,
        .iti.iti--allow-dropdown.iti--separate-dial-code {
            width: 100%;
        }

        .select2-container--default .select2-selection--single .select2-selection__arrow,
        .select2-container .select2-selection--single {
            height: 38px !important;
        }

        .select2-container--default .select2-selection--single .select2-selection__rendered {
            line-height: 38px;
        }

        .button-text.on-submit {
            visibility: hidden !important;
        }

        .typing-loader {
            width: 6px;
            height: 6px;
            -webkit-animation: line 1s linear infinite alternate;
            -moz-animation: line 1s linear infinite alternate;
            animation: line 1s linear infinite alternate;
            position: absolute;
            top: 50%;
            left: 20px;
            transform: translateY(-50%);
            display: none;
        }

        @@-webkit-keyframes line {
            0% {
                background-color: #03A9F3;
                box-shadow: 12px 0px 0px 0px #C7EBFC, 24px 0px 0px 0px #C7EBFC;
            }

            25% {
                background-color: #57C5F7;
                box-shadow: 12px 0px 0px 0px #57C5F7, 24px 0px 0px 0px #C7EBFC;
            }

            75% {
                background-color: #57C5F7;
                box-shadow: 12px 0px 0px 0px #C7EBFC, 24px 0px 0px 0px #57C5F7;
            }
        }

        @@-moz-keyframes line {
            0% {
                background-color: #03A9F3;
                box-shadow: 12px 0px 0px 0px #C7EBFC, 24px 0px 0px 0px #C7EBFC;
            }

            25% {
                background-color: #57C5F7;
                box-shadow: 12px 0px 0px 0px #57C5F7, 24px 0px 0px 0px #C7EBFC;
            }

            75% {
                background-color: #57C5F7;
                box-shadow: 12px 0px 0px 0px #C7EBFC, 24px 0px 0px 0px #57C5F7;
            }
        }

        @@keyframes line {
            0% {
                background-color: #03A9F3;
                box-shadow: 12px 0px 0px 0px #C7EBFC, 24px 0px 0px 0px #C7EBFC;
            }

            25% {
                background-color: #57C5F7;
                box-shadow: 12px 0px 0px 0px #57C5F7, 24px 0px 0px 0px #C7EBFC;
            }

            75% {
                background-color: #57C5F7;
                box-shadow: 12px 0px 0px 0px #C7EBFC, 24px 0px 0px 0px #57C5F7;
            }
        }
    </style>

}

@section scripts{

    <script src="~/Script/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Script/jquery.validate.min.js"></script>
    <script src="~/Script/moment.min.js"></script>
    <script src="~/Script/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/intl-tel-input/js/intlTelInput-jquery.min.js"></script>
    <script src="~/Scripts/intl-tel-input/js/intlTelInput.js"></script>
    @*<script src="~/assets/semantic.ui/semantic.min.js"></script>*@
    <script src="~/Scripts/SweetAlert2/sweetalert2.all.min.js"></script>
    <script src="~/select2/js/select2.min.js"></script>

    <script>
        var $ajaxHelperCreateForm = $('#ajaxHelperCreateForm');
        var $ajaxHelperCreateForm1 = $('#ajaxHelperCreateForm1');
        var VisitorList = [];

        $(document).ready(function () {

            $('#Event_Id').select2();
            $('#Visitor_Id').select2();

           // intl_tel_input.InitilizeOnCreateForm();

            changeVisitorByEvent.eventAction();

            //submitCreateForm();

            submitSendBtn();
            sendAllBulkSms();

            //$ajaxHelperCreateForm.find('button[type="reset"]').on('click', function (event) {
            //    event.preventDefault()

            //    resetFormFields($ajaxHelperCreateForm);
            //})
        });

        @{ #region Ajax data sending section}

         function sendAllBulkSms() {
             var $submitBtn = $('#submitCreateCustomersAll');

            @* $submitBtn.css({
                'border-top-left-radius': '60px',
                'border-bottom-left-radius': '60px',
            });*@

             $submitBtn.on('click', function (e) {
                e.preventDefault();

                var $eventDropDown = $('#Event_Id');

                if ($eventDropDown.val() === '') {
                    alert("Please select event first");
                    return false;
                 }

                 Swal.fire({
                     //title: 'Are you sure?',
                     text: "Do you want to send Bulk WhatsApp notification?",
                     icon: 'warning',
                     showCancelButton: true,
                     confirmButtonColor: '#3085d6',
                     cancelButtonColor: '#d33',
                     confirmButtonText: 'Yes!'
                 }).then((result) => {
                     if (result.isConfirmed)
                     {
                         var event_data = $eventDropDown.val();
                             $.ajax({
                                type: 'POST',
                                url: '@Url.Action("WhatsAppNotificationAll", "CardDesignMaster")',
                                 data: { "Event_Id": event_data },
                                success: function (data) {

                                    const Toast = Swal.mixin({
                                        toast: true,
                                        position: 'top-end',
                                        showConfirmButton: false,
                                        timer: 3000,
                                        timerProgressBar: true,
                                        didOpen: (toast) => {
                                            toast.addEventListener('mouseenter', Swal.stopTimer)
                                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                                        }
                                    })

                                    if (data.sendStatus) {
                                        Toast.fire({
                                            icon: 'success',
                                            title: data.response
                                        })
                                    } else {
                                        Toast.fire({
                                            icon: 'error',
                                            title: data.response
                                        })
                                    }


                                }
                            });
                     }

                 });


            });
        }

         function submitSendBtn() {
             var $submitSBtn = $('#submitCreateCustomers');

            @* $submitBtn.css({
                'border-top-left-radius': '60px',
                'border-bottom-left-radius': '60px',
            });*@

             $submitSBtn.on('click', function (e) {
                e.preventDefault();

                 var $eventDropDown = $('#Event_Id');
                 var $VisitorsDropDown = $('#Visitor_Id');

                    if ($eventDropDown.val() === '') {
                        alert("Please select event first");
                        return false;
                    }

                     if ($VisitorsDropDown.val() === '') {
                         alert("Please select visitors first");
                         return false;
                     }

                 Swal.fire({
                     //title: 'Are you sure?',
                     text: "Do you want to Send WhatsApp notification?",
                     icon: 'warning',
                     showCancelButton: true,
                     confirmButtonColor: '#3085d6',
                     cancelButtonColor: '#d33',
                     confirmButtonText: 'Yes!'
                 }).then((result) => {
                     if (result.isConfirmed)
                     {
                         var visitors = $('#Visitor_Id').val();
                        
                         var getInvitees=[];
                         getInvitees.push(getInvitees);
                         var Event_Id = $('#Event_Id').val();

                         console.log(VisitorList + " - Event Id: " + Event_Id + " - Get Invitees: " + visitors);

                         $.ajax({
                             type: 'POST',
                             url: '@Url.Action("WhatsAppNotification", "CardDesignMaster")',
                             data: { visitors, Event_Id },
                                success: function (data) {

                                    const Toast = Swal.mixin({
                                        toast: true,
                                        position: 'top-end',
                                        showConfirmButton: false,
                                        timer: 3000,
                                        timerProgressBar: true,
                                        didOpen: (toast) => {
                                            toast.addEventListener('mouseenter', Swal.stopTimer)
                                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                                        }
                                    })

                                    if (data.sendStatus) {
                                        Toast.fire({
                                            icon: 'success',
                                            title: data.response
                                        })
                                    } else {
                                        Toast.fire({
                                            icon: 'error',
                                            title: data.response
                                        })
                                    }


                                }
                         });

                     }

                 });


            });
        }



        function submitCreateForm() {
            $ajaxHelperCreateForm.on('click', 'button[type="submit"]', function (e) {
                e.preventDefault();
              @* var $intl_error_span = $ajaxHelperCreateForm.find("#intl-input-error");*@

                $('#Event_Id').siblings('.field-validation-error').show();
                $('#Visitor_Id').siblings('.field-validation-error').show();

               @* if (!isInternationalMobileNumberValid($ajaxHelperCreateForm)) {
                    $intl_error_span.removeClass('d-none').text("Please enter WhatsApp mobile number.");
                }*@

                if ($ajaxHelperCreateForm.valid()) {

                    Swal.fire({
                        //title: 'Are you sure?',
                        text: "Do you want to send this notification?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $ajaxHelperCreateForm.submit();
                        }
                    });
                }
            });
        }


        @{ #region }

     @*  function OnBeginRequestCreate() {
            $ajaxHelperCreateForm.find('.typing-loader').show();
            $ajaxHelperCreateForm.find('.button-text').addClass('on-submit');
        }*@

        @*function OnSuccessRequestCreate(data) {

            $ajaxHelperCreateForm.find('.typing-loader').hide();
            $ajaxHelperCreateForm.find('.button-text').removeClass('on-submit');

            //alert(data.response);

                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

            if (data.sendStatus) {
                Toast.fire({
                    icon: 'success',
                    title: data.response
                })
            } else {
                Toast.fire({
                    icon: 'fail',
                    title: data.response
                })
            }

            //Reset form fields
            resetFormFields($ajaxHelperCreateForm);

        }
*@
      @*  function OnFailureRequestCreate() {

            $ajaxHelperCreateForm.find('.typing-loader').hide();
            $ajaxHelperCreateForm.find('.button-text').removeClass('on-submit');
        }
*@@*
        function resetFormFields($ajaxHelperCreateForm) {
            var $event_id =$ajaxHelperCreateForm.find('#Event_Id');
            $event_id.siblings('.field-validation-error').show();
            $event_id.val(null).trigger('change');

            var $visitor_id = $ajaxHelperCreateForm.find('#Visitor_Id');
            $visitor_id.siblings('.field-validation-error').show();
            $visitor_id.val(null).trigger('change');*@

           @* $ajaxHelperCreateForm.find('#Message').val(null);*@

            @*var $mobileNumber = $ajaxHelperCreateForm.find('#mobileNumber').get(0);
            var iti = window.intlTelInputGlobals.getInstance($mobileNumber);*@

          @*  iti.setCountry("tz");
            $($mobileNumber).val(null);*@
       @* }*@

       @{ #endregion}


        var changeVisitorByEvent = (function () {
            function MaintainEventVisitors() {
                this.eventDropdownList = $("#Event_Id");
                this.visitorDropdownList = $('#Visitor_Id');

                this.eventAction = function () {
                    onEventDropdownListChange(this.eventDropdownList, this.visitorDropdownList)

                    this.visitorDropdownList.on('change', function(){
                        var visitor_data = $(this).val();

                        updateValidationMessage($(this), visitor_data);
                    })
                }
            }


            function onEventDropdownListChange($eventDropdownList, $visitorDropdownList) {
                $eventDropdownList.on('change', function () {
                    var event_data = $(this).val();

                    updateValidationMessage($eventDropdownList, event_data);

                    if (event_data.length > 0) {
                        $.ajax({
                            // the server script you want to send your data to
                            'url': '@Url.Action("OnEventChangeAction")',
                            // all of your POST/GET variables
                            'data': { "Event_Id": event_data },
                            // you may change this to GET, if you like...
                            'type': 'post',
                            // the kind of response that you want from the server
                            'dataType': 'html',
                            'beforeSend': function () {
                                // anything you want to have happen before sending the data to the server...
                                // useful for "loading" animations
                            }
                        })
                            .done(function (response) {
                                var data = JSON.parse(response);

                                updateVisitorDropdownListOnEventDropdownListChange($visitorDropdownList, data.data_value);

                                // what you want to happen when an ajax call to the server is successfully completed
                                // 'response' is what you get back from the script/server
                                // usually you want to format your response and spit it out to the page
                            })
                            .fail(function (code, status) {
                                // what you want to happen if the ajax request fails (404 error, timeout, etc.)
                                // 'code' is the numeric code, and 'status' is the text explanation for the error
                                // I usually just output some fancy error messages
                            })
                            .always(function (xhr, status) {
                                // what you want to have happen no matter if the response is success or error
                                // here, you would "stop" your loading animations, and maybe output a footer at the end of your content, reading "done"
                            });
                    } else {
                        updateVisitorDropdownListOnEventDropdownListChange($visitorDropdownList, [])
                    }
                });
            }

            function updateValidationMessage($dropdownlist, event_data) {

                if (event_data.length> 0) {
                    $dropdownlist.siblings('.field-validation-error').hide();
                } else {
                    $dropdownlist.siblings('.field-validation-error').show();
                }
            }

            function updateVisitorDropdownListOnEventDropdownListChange($visitorDropdownList, data) {
                var $defaultOption = '<option value="">Select invitee</option>';

                $visitorDropdownList.empty();

                $visitorDropdownList.append($defaultOption);

                if (data != null && data.length > 0) {
                    $.each(data, function (index, visitor) {
                        $visitorDropdownList.append('<option value="' + visitor.visitor_det_sno + '">' + visitor.visitor_name + '</option>');
                    });
                }

            }

            return new MaintainEventVisitors();
        })();

        @{ #endregion;}


        var intl_tel_input = (function () {

            function Intl_Tel_Input() {
                this.createFormElement = $('#ajaxHelperCreateForm');
            }

            Intl_Tel_Input.prototype.InitilizeOnCreateForm = function () {

                var $form = this.createFormElement;
                var $mobileNumber = document.querySelector("#mobileNumber");

                initilize_intlTelInput($mobileNumber);

                ValidateInternationMobileNumber($form.get(0), $mobileNumber);

                var iti = window.intlTelInputGlobals.getInstance($mobileNumber);

                iti.setCountry("tz");
                $form.find("#intl-input-error").addClass('d-none');

                onMobileNumberChangeEvent($mobileNumber, iti);
            }

            function onMobileNumberChangeEvent($mobileNumber, iti) {
                $($mobileNumber).on('change', function(){
                    var mobile_number = iti.getNumber();
                    $("#WhatsAppNumber").val(mobile_number);
                });
            }

            // here, the index maps to the error code returned from getValidationError - see readme
            function getErrorMapArray() {
                var errorMap = [
                    "Please enter a valid mobile operator code",
                    "Invalid country code",
                    "The mobile number is too short",
                    "The mobile number is too long",
                    "Please enter a valid mobile number"];

                return errorMap;
            }

            function initilize_intlTelInput($mobileNumber) {

                 window.intlTelInput($mobileNumber, {
                    dropdownContainer: document.body,
                    formatOnDisplay: false,
                    preferredCountries: ['tz'],
                    separateDialCode: true,
                    utilsScript: "@Url.Content("~/Scripts/intl-tel-input/js/utils.js")",
                 });
            }

            function ValidateInternationMobileNumber($form, $input) {
                var iti = window.intlTelInputGlobals.getInstance($input);

                $input.addEventListener('keyup', reset($form));
                $input.addEventListener('change', reset($form));

                $input.addEventListener('blur', function () {
                    reset($form);

                    $input.classList.remove("invalid-mobile-number");

                    var mobileNumberValue = $input.value.trim();
                    var isOnlyDigits = new RegExp(/^\d+$/);

                    var $intl_tel_errorMsg = $form.querySelector("#intl-input-error");

                    if (mobileNumberValue) {
                        if (isOnlyDigits.test(mobileNumberValue)) {
                            if (!iti.isValidNumber()) {
                                var errorCode = iti.getValidationError();
                                var errorMap = getErrorMapArray();

                                if (errorCode >= 0 && errorCode < errorMap.length) {
                                    $intl_tel_errorMsg.innerHTML = errorMap[errorCode];
                                    $intl_tel_errorMsg.classList.remove("d-none");
                                    $intl_tel_errorMsg.classList.add("d-block");
                                    $input.classList.add("invalid-mobile-number");
                                }

                            } else {
                                $input.classList.remove("invalid-mobile-number");
                            }

                        } else {
                            $input.classList.add("invalid-mobile-number");
                            $intl_tel_errorMsg.classList.remove("d-none");
                            $intl_tel_errorMsg.classList.add("d-block");
                            $intl_tel_errorMsg.innerHTML = "Please enter a valid mobile number";
                        }
                    } else{
                        $($intl_tel_errorMsg).removeClass('d-none').text("Please enter WhatsApp mobile number.");
                    }
                });

            }

            function reset($form){
                var $intl_tel_errorMsg = $form.querySelector("#intl-input-error");

                $intl_tel_errorMsg.innerHTML = "";
                $intl_tel_errorMsg.classList.remove("d-block");
                $intl_tel_errorMsg.classList.add("d-none");
            };


            return new Intl_Tel_Input();
        })();

        function isInternationalMobileNumberValid($form) {
            var $mobileNumber = $form.find('#mobileNumber').get(0);

            var iti = window.intlTelInputGlobals.getInstance($mobileNumber);

            if (iti.isValidNumber()) {
                return true;
            } else {
                return false;
            }
        }
    </script>
}