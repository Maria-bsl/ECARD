@model FUNDING.BL.BusinessEntities.Masters.CustomerUsers

@{
    AjaxOptions updateCustomerUsersAjaxOptions = new AjaxOptions();
    updateCustomerUsersAjaxOptions.HttpMethod = "POST";
    //updateCustomerUsersAjaxOptions.UpdateTargetId = "divCustomerUsers";
    updateCustomerUsersAjaxOptions.OnBegin = "OnBeginRequestUpdate";
    updateCustomerUsersAjaxOptions.OnSuccess = "OnSuccessRequestUpdate";
    //updateCustomerUsersAjaxOptions.OnComplete = "OnCompleteRequestUpdate";
    updateCustomerUsersAjaxOptions.OnFailure = "OnFailureRequestUpdate";
    updateCustomerUsersAjaxOptions.Confirm = "Do you want to update user?";
}

@using (Ajax.BeginForm(actionName: "AjaxHelperUpdateForm", controllerName: "CustomerUsers", routeValues: null,
    ajaxOptions: updateCustomerUsersAjaxOptions, htmlAttributes: new { id = "ajaxHelperUpdateForm", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()

    <!-- Modal -->
    <div class="modal fade" id="ajaxHelperUpdateModal" tabindex="-1" role="dialog" data-bs-backdrop="static" data-keyboard="false" aria-labelledby="ajaxHelperCreateLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-xl">
            <div id="divCustomerUsers" class="modal-content position-relative">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Update User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.cust_users_sno)
                        @Html.Hidden("mobile_no_clone")

                        <div class="form-group row ">
                            @Html.LabelFor(model => model.user_fullname, htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2" })
                            <div class="col-sm-8 col-lg-9 col-xl-10">
                                @Html.EditorFor(model => model.user_fullname, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.user_fullname, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row ">
                            @Html.LabelFor(model => model.user_type, htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2" })
                            <div class="col-sm-8 col-lg-9 col-xl-10">
                                @Html.DropDownListFor(model => model.user_type, ViewBag.user_type as IEnumerable<SelectListItem>, "Select user type", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.user_type, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row ">
                            @Html.LabelFor(model => model.mobile_no, htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2" })
                            <div class="col-sm-8 col-lg-9 col-xl-10">
                                @Html.EditorFor(model => model.mobile_no, new { htmlAttributes = new { @class = "form-control", data_val_remote = "This mobile number already exists", data_val_remote_additionalfields = "*.mobile_no,*.__RequestVerificationToken,*.mobile_no_clone", data_val_remote_type = "POST", data_val_remote_url = Url.Action("IsMobileNumberAvailable", "CustomerUsers") } })
                                @Html.ValidationMessageFor(model => model.mobile_no, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row ">
                            @Html.LabelFor(model => model.email_address, htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2" })
                            <div class="col-sm-8 col-lg-9 col-xl-10">
                                @Html.EditorFor(model => model.email_address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.email_address, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>
                </div>
                <div class="modal-footer">
                    <button id="submitCreateCustomers" type="submit" class="btn btn-outline-info btn-rounded">Update</button>
                    <button type="button" class="btn btn-outline-danger btn-rounded" data-bs-dismiss="modal">Close</button>
                </div>

                <div class="position-absolute w-100 h-100 modal_pre-loader">
                    <div class='d-flex justify-content-center align-items-center h-100'>
                        <div class='ripple-pre-loader'>
                            <div></div>
                            <div></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}