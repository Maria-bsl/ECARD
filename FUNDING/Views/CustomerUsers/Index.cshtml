@{
    ViewBag.Title = "Users";
    Layout = "~/Views/Shared/_Customers.cshtml";

    ViewData["Title"] = "Users";
    ViewData["Home"] = "Home";
    ViewData["Bct"] = "Create";

    //Table header labels
    ViewData["Sno"] = "Sno";

    ViewData["Actions"] = "Actions";

}


<div class="row page-titles">
    <div class="col-md-5 align-self-center">
        <h4 class="text-themecolor">@ViewData["Title"]</h4>
    </div>
    <div class="col-md-7 align-self-center text-end">
        <div class="d-flex justify-content-end align-items-center">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Dashboard", "CustomerActivity")">@ViewData["Home"]</a>
                </li>
                <li class="breadcrumb-item active">@ViewData["Title"]</li>
            </ol>
        </div>
    </div>
</div>
<div class="card border-0">
    <div class="card-body">


        <div class="mb-1 text-end">
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-outline-primary btn-rounded" data-bs-toggle="modal" data-bs-target="#ajaxHelperCreateModal">
                <i class="fas fa-plus"></i>
                @ViewData["Bct"]
            </button>
        </div>
        <hr />

        @Html.Partial("_AjaxHelperCreateForm")

        @Html.Partial("_AjaxHelperUpdateForm")

        @Html.Partial("_AjaxHelperDeleteForm")

        <div class="table-responsive with-loader">
            <table id="CustomerUsersTable" class="table table-bordered display" style="width: 100%;">
                <thead>
                    <tr>
                        <th class="th-sno pl-0 text-center">@ViewData["Sno"]</th>
                        <th>Full Name</th>
                        @*<th>Username</th>*@
                        <th>User Type</th>
                        <th>Mobile Number</th>
                        <th>Email Address</th>
                        <th class="th-actions px-0">
                            <div class="th-actions-div">
                                @ViewData["Actions"]
                            </div>
                        </th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

@section Styles {
    <link href="~/Content/Site.css" rel="stylesheet" />
}

@section Scripts {
    <script src="~/Script/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Script/jquery.validate.min.js"></script>
    <script src="~/Script/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Script/app.js"></script>

    <script>
        var CustomerUsersDatatable, $clickedDeleteButton;
        var $ajaxHelperCreateForm = $('#ajaxHelperCreateForm');
        var $ajaxHelperUpdateForm = $('#ajaxHelperUpdateForm');
        var $ajaxHelperDeleteForm = $('#ajaxHelperDeleteForm');
        var $CustomerUsersTable = $('#CustomerUsersTable');
        var $ajaxHelperCreateModal = $('#ajaxHelperCreateModal');
        var $ajaxHelperUpdateModal = $('#ajaxHelperUpdateModal');
        var $modalPreLoader = $('#modal_pre-loader');

        $(document).ready(function () {
            CustomerUsersDatatable = $CustomerUsersTable.DataTable({
                processing: true,
                deferRender: true,
                stateSave: 15,
                language: {
                    processing:
                        "<div class='d-flex justify-content-center align-items-center h-100'>"+
                        "\t<div class='ripple-pre-loader'>" +
                        "\t\t<div></div>" +
                        "\t\t<div></div>" +
                        "\t</div>"+
                        "</div>"
                },

                ajax: {
                    url: "@Url.Action("IndexDataTable")",
                    type: "POST",
                    dataType: "json",
                },

                // Table serial number
                @*fnRowCallback: function (nRow, aData, iDisplayIndex) {
                    var oSettings = this.fnSettings();
                    $("td:first", nRow).html(oSettings._iDisplayStart + iDisplayIndex + 1);
                    return nRow;
                },*@

                columns: [
                    {
                        title: "Sno",
                        data: 'id',
                    },
                    { data: 'user_fullname', title: 'Full Name' },
                    //{data: 'username', title: "Username"},
                    {data: 'user_type', title: "User Type"},
                    { data: 'mobile_no', title: "Mobile Number" },
                    {data: 'email_address', title: "Email Address"},
                    {
                        orderable: false,
                        data: null,
                         render: function (data, type, row) {
                            var update_url = '/CustomerUsers/AjaxHelperUpdateForm/'+ row.cust_users_sno;
                             var delete_url = '/CustomerUsers/AjaxHelperDeleteForm/'+ row.cust_users_sno;

                             return "<div class='position-relative'>"+
                                "<div class='table-buttons justify-content-around'> " +
                                "\t<button class='btn btn-outline-info btn-sm' data-id=" + row.cust_users_sno + " data-btn-type='edit' data-url=" + update_url + ">" +
                                "\t\t<i class='fas fa-pencil-alt'></i>" +
                                "\t</button>" +
                                "\t<button class='btn btn-outline-danger btn-sm' data-id=" + row.cust_users_sno + " data-btn-type='delete' data-url=" + delete_url + ">" +
                                "\t\t<i class='fas fa-trash'></i>" +
                                "\t</button>" +
                                "</div>" +
                                "<div class='justify-content-center h-100 w-100 table-preloader'>"+
                                "\t<div class='loading-swapping-wrapper'>"+
                                "\t\t<div class='loading-swapping'>"+
                                "\t\t\t<div></div>"+
                                "\t\t\t<div></div>"+
                                "\t\t\t<div></div>"+
                                "\t\t</div>"+
                                "\t</div>"+
                                "</div>"+
                                "</div>";
                        }
                    }
                ]

            });

            //On opening create modal clear the form fields
            resetFormFieldsOnModalClose($ajaxHelperCreateModal, $ajaxHelperCreateForm);

            OperationOnDatatableBtns();

        });

       @{ #region Operations On Datatable Buttons }

        function OperationOnDatatableBtns() {

            //click an update button
            $CustomerUsersTable.on('click', 'button[data-btn-type=edit]', function (e) {
                e.preventDefault();

                $clickedUpdateButton = $(this);

                updateRecordOperation($clickedUpdateButton);
            });

            //click an delete button
            $CustomerUsersTable.on('click', 'button[data-btn-type=delete]', function (e) {
                e.preventDefault();

                $clickedDeleteButton = $(this);

                deleteRowRecord($clickedDeleteButton);

            });

        }

        function updateRecordOperation($this) {
            var url = $this.attr('data-url');
            var data_id = $this.attr('data-id');
            var tr = $this.parentsUntil('tbody').get(3);

            populateUpdateModalFormElements($(tr), data_id);

            //change form action attribute
            $ajaxHelperUpdateForm.attr('action', url);

            $ajaxHelperUpdateModal.modal('show');

        }

        function populateUpdateModalFormElements($table_row, data_id) {

            var userFullName = $table_row.find('td').eq(1).text().trim();
            //var username = $table_row.find('td').eq(2).text().trim();
            var userType = $table_row.find('td').eq(2).text().trim();
            var mobileNumber = $table_row.find('td').eq(3).text().trim();
            var emailAddress = $table_row.find('td').eq(4).text().trim();

            var userTypeValue = getSelectValueForDropdownList(userType);

            $ajaxHelperUpdateForm.find('#cust_users_sno').val(data_id);
            $ajaxHelperUpdateForm.find('#user_fullname').val(userFullName);
            //$ajaxHelperUpdateForm.find('#username').val(username);
            $ajaxHelperUpdateForm.find('#user_type').val(userTypeValue);
            $ajaxHelperUpdateForm.find('#email_address').val(emailAddress);
            $ajaxHelperUpdateForm.find('#mobile_no').val(mobileNumber);
            $ajaxHelperUpdateForm.find('#mobile_no_clone').val(mobileNumber);

        }

        function getSelectValueForDropdownList(optionItemText) {
            var $optinItemList = $ajaxHelperUpdateForm.find('#user_type option');
            var optionItemValue = '';

            $.map($optinItemList, function (value, index) {
                if ($(value).text().trim() === optionItemText) {
                    optionItemValue = $(value).val();
                }
            });
            return optionItemValue;
        }

        @{#endregion}

        @{ #region Create--Record Section }

        function submitCreateForm() {
            $ajaxHelperCreateForm.on('click', '#submitCreateCustomerUsers', function (e) {
                e.preventDefault();

                var x = confirm("Do you want to add a user?");

                if (x) {
                    $ajaxHelperCreateForm.submit();
                }
            });
        }

        function OnBeginRequestCreate() {

            //Display preloader on modal open
            getModalPreLoader($ajaxHelperCreateModal).show();
        }

        function OnSuccessRequestCreate(data) {

            //Hide modal pre-loader after closing the modal
            getModalPreLoader($ajaxHelperCreateModal).hide();

            CustomerUsersDatatable.ajax.reload();

            $ajaxHelperCreateModal.modal('hide');

            if (data.createStatus) {
                alert(data.response);
            }

            //Reset form fields
            resetFormFieldsOnModalClose($ajaxHelperCreateModal, $ajaxHelperCreateForm);

        }

        function OnFailureRequestCreate() {

            //Hide modal pre-loader after closing the modal
            getModalPreLoader($ajaxHelperCreateModal).hide();

            $ajaxHelperCreateModal.modal('hide');

            //Reset form fields
            resetFormFieldsOnModalClose($ajaxHelperCreateModal, $ajaxHelperCreateForm);
        }

        @{ #endregion}

        @{ #region Update--Record Section }

        function submitUpdateForm() {
            $ajaxHelperUpdateForm.on('click', '#submitCreateCardState', function (e) {
                e.preventDefault();

                var x = confirm("Do you want to update a user?");

                if (x) {
                    $ajaxHelperUpdateForm.submit();
                }
            });
        }

        function OnBeginRequestUpdate() {
            //Display preloader on modal open
            getModalPreLoader($ajaxHelperUpdateModal).show();
        }

        function OnSuccessRequestUpdate(data) {
            $ajaxHelperUpdateModal.modal('hide');

            //Reset form fields
            resetFormFieldsOnModalClose($ajaxHelperUpdateModal, $ajaxHelperUpdateForm);

            //Hide modal pre-loader after closing the modal
            getModalPreLoader($ajaxHelperUpdateModal).hide();

            if (data.updateStatus) {
                alert(data.response);
            }

            //refresh the datatable after updating data
            CustomerUsersDatatable.ajax.reload();
        }

        function OnFailureRequestUpdate() {
            $ajaxHelperUpdateModal.modal('hide');

            //Reset form fields
            resetFormFieldsOnModalClose($ajaxHelperUpdateModal, $ajaxHelperUpdateForm);

            //Hide modal pre-loader after closing the modal
            getModalPreLoader($ajaxHelperUpdateModal).hide();
        }

        @{ #endregion}

        @{ #region Delete--Record Section }

        function deleteRowRecord($this) {
            var url = $this.attr('data-url');
            var data_id = $this.attr('data-id');

            //change form action attribute
            $ajaxHelperDeleteForm.attr('action', url);

            $ajaxHelperDeleteForm.find('#cust_users_sno').val(data_id);

            $('#deleteBtn').click();
        }

        function OnBeginRequestDelete() {
            //Display preloader upon confirm delete
            $clickedDeleteButton.parent().hide().next().css('display', 'flex');
        }

        function OnSuccessRequestDelete(data) {
            //Hide preloader on success
            $clickedDeleteButton.parent().css('display', 'flex').next().hide();

            //Reset form fields
            resetFormFields($ajaxHelperDeleteForm);

            if (data.deleteStatus) {
                alert(data.response);
            } else {
                alert(data.response);
            }

            //refresh the datatable after updating data
            CustomerUsersDatatable.ajax.reload();
        }

        function OnFailureRequestDelete() {
            //Hide preloader on failure
            $clickedDeleteButton.parent().css('display', 'flex').next().hide();

            //Reset form fields
            resetFormFields($ajaxHelperDeleteForm);

        }

        @{ #endregion}

        /**
         * *This function clears form field of a specific
         *
         * @@param form specific form Element
         */
        function resetFormFields(form) {
            form.find('#user_fullname').val('');
            //form.find('#username').val('');
            form.find('#user_type').val('');
            form.find('#email_address').val('');
            form.find('#mobile_no').val('');
        }

        function resetFormFieldsOnModalClose(modal, form) {
            modal.on('hidden.bs.modal', function () {
                resetFormFields(form);
                validateFormElementsOnModalClose(form);
            });
        }

        function getModalPreLoader(modal) {
            return modal.find('.modal_pre-loader');
        }

        function validateFormElementsOnModalClose(form) {
            var $field = form.find('.input-validation-error');
            var $spanErrorWrapper = form.find('.field-validation-error')

            //Validate the field
            $field.removeClass('input-validation-error').addClass('valid');
            $field.attr('aria-invalid', 'false');

            //Validate the span error wrapper and remove the span error message
            $spanErrorWrapper.removeClass('field-validation-error').addClass('field-validation-valid');
            $spanErrorWrapper.empty();
        }
    </script>
}
