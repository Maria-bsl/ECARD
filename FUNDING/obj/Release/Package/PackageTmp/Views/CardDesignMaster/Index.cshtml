@model FUNDING.Models.CardGenerationModule.DataLayer.CardDesignMasterViewModel

@{ Layout = "~/Views/Shared/_CardDesignMaster.cshtml"; }

@section Styles{
    <link href="~/Content/CardDesignStyles.css" rel="stylesheet" />
    <link href="~/Scripts/Coloris-main/coloris.min.css" rel="stylesheet" />


    <style>

        #pills-fontFamilies li>a{
            font-size: 1rem;
            font-weight: 500;
        }

        .coloris{
            width: 200px;
        }

        .card-main-template {
            background-image: url("@Url.Content(ViewBag.DefaultCardTemplate)");
        }

        .card-item[data-content="event-invitee"] span,
        .card-item[data-content="table_number_label"] span,
        .card-item[data-content="table_number_digit"] span {
            font-family: acme;
            line-height: 1.25;
        }

        .card-qr-code {
            background: url( @Url.Content(ViewBag.DefaultQRCode) );
        }

        .card-design-wait{
            pointer-events: none;
        }
        .card-design-wait>div{
            display: inline-block !important;
        }

        .font-size-wrapper{
            width: 120px;
        }

        #font-size-ui {
            min-height: 32px;
            max-height: 32px;
            max-width: 55px;
        }

        #font-size-ui:focus {
            box-shadow: 0 0 0 .05rem rgba(13,110,253,.25);
        }

        .font-size-wrapper > span {
            cursor: pointer;
        }

        .font-size-wrapper > span:hover {
            background-color: #E6EAEE;
        }

        .accordion-item,
        .accordion-button {
            background-color: #fff;
        }

    </style>
}


<div class="card-stage-wrapper d-flex">
    <div class="card-stage d-flex w-100">
        <div class="d-flex align-items-start position-relative">
            <div class="nav flex-column nav-pills py-1 px-1 h-100" id="v-pills-tab" role="tablist"
                 aria-orientation="vertical">
                <button class="nav-link active" id="pills-templates-tab" data-bs-toggle="pill"
                        data-bs-target="#v-pills-home" type="button" role="tab" aria-controls="v-pills-home"
                        aria-selected="true">
                    <!-- <i class="far fa-file-image"></i> -->
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                        <path fill="currentColor" fill-rule="evenodd"
                              d="M19.5 10V5a.5.5 0 0 0-.5-.5h-4.5V10h5zm0 1.5h-5v8H19a.5.5 0 0 0 .5-.5v-7.5zm-6.5-7H5a.5.5 0 0 0-.5.5v14c0 .28.22.5.5.5h8v-15zM5 3h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2z">
                        </path>
                    </svg>
                    <span>Templates</span>
                </button>
                <button class="nav-link" id="pills-fillText-tab" data-bs-toggle="pill"
                        data-bs-target="#pills-fillText" type="button" role="tab" aria-controls="pills-fillText"
                        aria-selected="false">
                    <i class="fas fa-pencil-alt"></i>
                    <span>Fill Text</span>
                </button>
                <button class="nav-link sr-only" id="pills-fonts-tab" data-bs-toggle="pill"
                        data-bs-target="#pills-fontFamilies" type="button" role="tab" aria-controls="v-pills-messages"
                        aria-selected="false">
                </button>
                <button class="nav-link sr-only" id="pills-colors-tab" data-bs-toggle="pill"
                        data-bs-target="#pills-colors" type="button" role="tab" aria-controls="v-pills-messages"
                        aria-selected="false">
                </button>
            </div>
            <div class="tab-content position-absolute py-1 px-2 show" id="v-pills-tabContent">
                <div class="tab-pane fade show active" id="v-pills-home" role="tabpanel"
                     aria-labelledby="pills-templates-tab">
                    @Html.Partial("_CardTemplates", Model.CardTemplatesList)
                </div>
                <div class="tab-pane fade" id="pills-fillText" role="tabpanel" aria-labelledby="pills-fillText-tab">
                    @Html.Partial("_FillForm", Model.EventDetails)
                </div>
                <div class="tab-pane fade" id="pills-fontFamilies" role="tabpanel"
                     aria-labelledby="pills-fonts-tab">
                    @Html.Partial("_FontsPartialView", Model.AllFontFamilies)
                </div>
                <div class="tab-pane fade" id="pills-colors" role="tabpanel" aria-labelledby="pills-colors-tab">
                    @Html.Partial("_ColorList")
                </div>

                @*<div class="tab-toggle-button d-flex justify-content-center align-items-center">
                        <i class="fas fa-angle-left"></i>
                    </div>*@
            </div>
        </div>
        <div class="card-main-viewport d-flex flex-column c-vw-resized w-100">
            <div class="top-controls d-flex align-items-center py-1 px-2">
                <button class="btn btn-outline-secondary border-0 active me-1 tab-toggle-button">
                    <i class="fas fa-outdent"></i>
                </button>

                <button id="font-tab" class="btn btn-outline-secondary border-0 active me-1 min-width-150px">
                    <span class="small">Acme</span>
                    <i class="fas fa-search"></i>
                </button>

                <div class="font-size-wrapper input-group px-1">
                    <span class="input-group-text" id="decrease-font-size"> <i class="fas fa-minus"></i> </span>
                    <input id="font-size-ui" type="text" class="form-control px-1 text-center" minlength="1" maxlength="3">
                    <span class="input-group-text" id="increase-font-size"> <i class="fas fa-plus"></i> </span>
                </div>

                <button id="colors-tab" class="btn btn-outline-secondary border-0 active me-1">
                    <span class="item-color"></span>
                </button>

                <button id="bold-button" class="btn btn-outline-secondary border-0 me-1">
                    <i class="fas fa-bold"></i>
                </button>

                <button id="italic-button" class="btn btn-outline-secondary border-0 me-1">
                    <i class="fas fa-italic"></i>
                </button>

                <button id="text-underline-button" class="btn btn-outline-secondary border-0 me-1">
                    <i class="fas fa-underline"></i>
                </button>

                <!-- Example single danger button -->
                <div id="align-text-wrapper" class="btn-group">
                    <button type="button" class="btn btn-outline-secondary border-0 me-1 dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fas fa-align-center"></i>
                    </button>
                    <ul id="text-align-list" class="dropdown-menu p-0">
                        <li>
                            <a data-text-align="left" class="dropdown-item py-2" href="javascript:void(0)">
                                <span>
                                    <i class="fas fa-align-left"></i>&nbsp&nbsp Left
                                </span>
                            </a>
                        </li>
                        <li>
                            <a data-text-align="right" class="dropdown-item py-2" href="javascript:void(0)">
                                <span>
                                    <i class="fas fa-align-right"></i>&nbsp&nbsp Right
                                </span>
                            </a>
                        </li>
                        <li>
                            <a data-text-align="center" class="dropdown-item py-2" href="javascript:void(0)">
                                <span>
                                    <i class="fas fa-align-center"></i>&nbsp&nbsp Center
                                </span>
                                <i class="fas fa-check"></i>
                            </a>
                        </li>
                        <li>
                            <a data-text-align="justify" class="dropdown-item py-2" href="javascript:void(0)">
                                <span>
                                    <i class="fas fa-align-justify"></i>&nbsp&nbsp Justify
                                </span>
                            </a>
                        </li>
                    </ul>
                </div>

            </div>
            <div class="main-viewport py-2">
                <div class="card-main-template">

                    <div class="draggable card-item" data-content="event-invitee">
                        <span id="invitee-name-temp">Invitee Name</span>
                        <span id="card-size-temp" style="display:none;">(Single)</span>
                    </div>

                    <div class="draggable card-item" data-content="table_number_label">
                        <span id="invitee-table_number_label">Table No</span>
                    </div>
                    
                    <div class="draggable card-item" data-content="table_number_digit">
                        <span id="table_no_digit">24</span>
                    </div>

                    <div class="draggable card-item card-qr-code" data-content="invitee-qr-code">
                    </div>

                </div>
            </div>
            <div class="bottom-controls justify-content-end align-items-center px-2" style="display: flex;">
                <div class="btn-group">
                    <a id="download-button" class="btn btn-success btn-rounded text-white">Download Card</a>
                    <button id="previewButton" class="btn btn-success btn-rounded text-white">
                        <div class="spinner-border spinner-border-sm" style="display: none"></div>
                        <span>Preview</span>
                    </button>
                    <button id="bulkGenerateButton" class="btn btn-primary btn-rounded text-white">
                        <div class="spinner-border spinner-border-sm" style="display: none"></div>
                        <span>Bulk Generate</span>
                    </button>
                    <a id="bulk-download-button" class="btn btn-primary btn-rounded text-white" style="display: none;">Bulk Download</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/Scripts/jquery-ui-1.13.0.custom/jquery-ui.min.js"></script>
    @*<script src="~/Scripts/vanilla-picker-master/vanilla-picker.min.js"></script>*@
    <script src="~/Scripts/Coloris-main/coloris.min.js"></script>
    <script src="~/Scripts/CardDesignScripts.js"></script>

    <script>

        var draggableElementData = @Html.Raw(Json.Encode(@ViewBag.DraggableElements));
        var downloadButton = document.querySelector('#download-button');
        downloadButton.classList.add('d-none');

        var draggableElementFineTunePositionHandler = (function () {
            return {
                initilize: function () {
                    InviteeDraggableElement().initiliazePositioning();

                    TableNumberLabelDraggableElement().initiliazePositioning();

                    TableNumberDigitDraggableElement().initiliazePositioning();

                    QrCodeDraggableElement().initiliazePositioning();

                    return this;
                },
                handlePositioning: function () {
                    InviteeDraggableElement().handlePositioning();

                    TableNumberLabelDraggableElement().handlePositioning();

                    TableNumberDigitDraggableElement().handlePositioning();

                    QrCodeDraggableElement().handlePositioning();
                },
            };

            function InviteeDraggableElement() {
                return {
                    positionInputElement: {
                        top: $('#invitee-details-topPosition-ui'),
                        left: $('#invitee-details-leftPosition-ui'),
                    },
                    inviteeCardElement: $('.card-item[data-content="event-invitee"]'),
                    inviteePositionObject: draggableElementData.editableElement.Position,

                    initiliazePositioning: function () {
                        positionInitialization(this.positionInputElement, this.inviteePositionObject);
                    },

                    handlePositioning: function () {
                        handleAllPositioningScenarios(this.positionInputElement, this.inviteePositionObject, this.inviteeCardElement);
                    }

                };
            }

            function TableNumberLabelDraggableElement() {
                return {
                    positionInputElement: {
                        top: $('#tableNumberLabel-details-topPosition-ui'),
                        left: $('#tableNumberLabel-details-leftPosition-ui'),
                    },
                    tableNumberLabelCardElement: $('.card-item[data-content="table_number_label"]'),
                    tableLabelPositionObject: draggableElementData.tableNumberLabel.Position,

                    initiliazePositioning: function () {
                        positionInitialization(this.positionInputElement, this.tableLabelPositionObject);
                    },

                    handlePositioning: function () {
                        handleAllPositioningScenarios(this.positionInputElement, this.tableLabelPositionObject, this.tableNumberLabelCardElement);
                    }

                };
            }

            function TableNumberDigitDraggableElement() {
                return {
                    positionInputElement: {
                        top: $('#tableNumberDigit-details-topPosition-ui'),
                        left: $('#tableNumberDigit-details-leftPosition-ui'),
                    },
                    inviteeCardElement: $('.card-item[data-content="table_number_digit"]'),
                    tableDigitPositionObject: draggableElementData.tableNumberDigit.Position,

                    initiliazePositioning: function () {
                        positionInitialization(this.positionInputElement, this.tableDigitPositionObject);
                    },

                    handlePositioning: function () {
                        handleAllPositioningScenarios(this.positionInputElement, this.tableDigitPositionObject, this.inviteeCardElement);
                    }

                };
            }

            function QrCodeDraggableElement() {
                return {
                    positionInputElement: {
                        top: $('#qr-code-topPosition-ui'),
                        left: $('#qr-code-leftPosition-ui'),
                    },
                    qrCodeCardElement: $('.card-item[data-content="invitee-qr-code"]'),
                    qrCodePositonObject: draggableElementData.qrCodeElement.Position,

                    initiliazePositioning: function () {
                        positionInitialization(this.positionInputElement, this.qrCodePositonObject);
                    },

                    handlePositioning: function () {
                        handleAllPositioningScenarios(this.positionInputElement, this.qrCodePositonObject, this.qrCodeCardElement);
                    }

                };
            }

            function positionInitialization(positionInputElementObject, positonObject) {
                var $topPositionInput = positionInputElementObject.top;
                var $leftPositonInput = positionInputElementObject.left;

                $topPositionInput.val(positonObject.TopPosition);
                $leftPositonInput.val(positonObject.LeftPosition);
            }

            function handleAllPositioningScenarios(positionInputElementObject, positionObject, $draggableCardElement) {

                (function topPositioningHandler(positionInputElementObject, positionObject, $draggableCardElement) {
                    var $topPositionInput = positionInputElementObject.top;

                    $topPositionInput.on('change', function () {
                        positionObject.TopPosition = parseInt($topPositionInput.val());
                        //Set card element's top position
                        $draggableCardElement.css('top', positionObject.TopPosition);
                        showPreviewButtonHideDownloadButton();
                    });

                })(positionInputElementObject, positionObject, $draggableCardElement);

                (function leftPositioningHandler(positionInputElementObject, positionObject, $draggableCardElement) {
                    var $leftPositionInput = positionInputElementObject.left;

                    $leftPositionInput.on('change', function () {
                        positionObject.LeftPosition = parseInt($leftPositionInput.val());
                        //Set card element's top position
                        $draggableCardElement.css('left', positionObject.LeftPosition);
                        showPreviewButtonHideDownloadButton();
                    });
                })(positionInputElementObject, positionObject, $draggableCardElement);

                (function draggablePositionHandler(positionInputElementObject, positionObject, $draggableCardElement) {

                    $draggableCardElement.on('drag', function () {
                        var topPositionValue = parseFloat($draggableCardElement.css('top'));
                        var leftPositionValue = parseFloat($draggableCardElement.css('left'));

                        positionInputElementObject.top.val(topPositionValue);
                        positionInputElementObject.left.val(leftPositionValue);

                        positionObject = { topPositionValue, leftPositionValue };
                        showPreviewButtonHideDownloadButton();
                    });
                })(positionInputElementObject, positionObject, $draggableCardElement);

            }

        })();

        var qrCodeResizeHandler = (function () {
            return {
                Init: function () {
                    qrCodeResizing().initilize().resizeHandler();
                }
            };

            function qrCodeResizing() {
                return {
                qrCodeSizeProperty: draggableElementData.qrCodeElement.QrCodeSize,
                    qrCodeCardElement: $('.card-item[data-content="invitee-qr-code"]'),
                    qrCodeResizeInputElement: $('#qr-code-size-ui'),

                    initilize: function () {
                        this.qrCodeResizeInputElement.val(this.qrCodeSizeProperty);
                        return this;
                    },

                    resizeHandler: function () {
                        var self = this;
                        var $qrCodeCardElement = this.qrCodeCardElement;
                        var $qrCodeResizeInputElement = this.qrCodeResizeInputElement;

                        $qrCodeResizeInputElement.on('change', function () {

                            $qrCodeCardElement.css({
                                'width': $qrCodeResizeInputElement.val(),
                                'height': $qrCodeResizeInputElement.val()
                            });

                            draggableElementData.qrCodeElement.QrCodeSize = parseFloat($qrCodeResizeInputElement.val());
                            showPreviewButtonHideDownloadButton();
                        });
                    }
                };
            }
        })();

        function colorPickerHandler(value) {

           return  {
                initilize: function () {
                    Coloris({
                        theme: 'large',
                        themeMode: 'light', // light, dark, auto
                        swatches: [
                            '#264653',
                            '#2a9d8f',
                            '#e9c46a',
                            '#f4a261',
                            '#e76f51',
                            '#d62828',
                            '#023e8a',
                            '#0077b6',
                            '#0096c7',
                            '#00b4d8',
                            '#48cae4',
                        ],
                        format: 'rgb',
                        alpha: false,
                        focusInput: true,
                    });

                   return this;
                },
                setColor: function () {
                    var $textDraggableElement = $('.card-item[data-content="event-invitee"] span');
                    var $tableLabelDraggableElement = $('.card-item[data-content="table_number_label"]');
                    var $tableDigitDraggableElement = $('.card-item[data-content="table_number_digit"]');
                    var $colorisInputField = $('.coloris');

                    $colorisInputField.on('change', function () {
                        var colorValue = $colorisInputField.val();
                        setActiveColorToColorButton(colorValue);

                        if ($textDraggableElement.hasClass('focus'))
                        {
                            $textDraggableElement.css('color', colorValue);
                            draggableElementData.editableElement.FontDetails.Color = colorValue;
                        }
                        else if ($tableLabelDraggableElement.hasClass('focus'))
                        {
                            $tableLabelDraggableElement.css('color', colorValue);
                            draggableElementData.tableNumberLabel.FontDetails.Color = colorValue;
                        }
                        else if ($tableDigitDraggableElement.hasClass('focus'))
                        {
                            $tableDigitDraggableElement.css('color', colorValue);
                            draggableElementData.tableNumberDigit.FontDetails.Color = colorValue;
                        }

                        showPreviewButtonHideDownloadButton();
                    });
                },

            }

        }

        function fontSizeHandler() {
            var $fontSizeInput = $('#font-size-ui');
            var $increaseFontSize = $('#increase-font-size');
            var $decreaseFontSize = $('#decrease-font-size');
            var $textDraggableElement = $('.card-item[data-content="event-invitee"]');
            var $tableLabelDraggableElement = $('.card-item[data-content="table_number_label"]');
            var $tableDigitDraggableElement = $('.card-item[data-content="table_number_digit"]');
            var fontSizeValue = draggableElementData.editableElement.FontDetails.FontSize;

            console.log(draggableElementData);

            $fontSizeInput.val(fontSizeValue);

            $fontSizeInput.on('change', function (e) {
                fontSizeValue = parseInt($fontSizeInput.val());

                if ($textDraggableElement.hasClass('focus'))
                {
                    $textDraggableElement.find('span').css('font-size', fontSizeValue);
                    draggableElementData.editableElement.FontDetails.FontSize = fontSizeValue;
                }
                else if ($tableLabelDraggableElement.hasClass('focus'))
                {
                    $tableLabelDraggableElement.find('span').css('font-size', fontSizeValue);
                    draggableElementData.tableNumberLabel.FontDetails.FontSize = fontSizeValue;
                }
                else if ($tableDigitDraggableElement.hasClass('focus'))
                {
                    $tableDigitDraggableElement.find('span').css('font-size', fontSizeValue);
                    draggableElementData.tableNumberDigit.FontDetails.FontSize = fontSizeValue;
                }
            });

            $decreaseFontSize.on('click', function (e) {
                e.preventDefault();

                if (fontSizeValue > 0) {
                    $fontSizeInput.val(--fontSizeValue);
                    //$textDraggableElement.find('span').css('font-size', fontSizeValue);
                    //draggableElementData.editableElement.FontDetails.FontSize = fontSizeValue;

                    if ($textDraggableElement.hasClass('focus')) {
                        $textDraggableElement.find('span').css('font-size', fontSizeValue);
                        draggableElementData.editableElement.FontDetails.FontSize = fontSizeValue;
                    }
                    else if ($tableLabelDraggableElement.hasClass('focus')) {
                        $tableLabelDraggableElement.find('span').css('font-size', fontSizeValue);
                        draggableElementData.tableNumberLabel.FontDetails.FontSize = fontSizeValue;
                    }
                    else if ($tableDigitDraggableElement.hasClass('focus')) {
                        $tableDigitDraggableElement.find('span').css('font-size', fontSizeValue);
                        draggableElementData.tableNumberDigit.FontDetails.FontSize = fontSizeValue;
                    }
                }
            });

            $increaseFontSize.on('click', function (e) {
                e.preventDefault();

                if (fontSizeValue <= 999) {
                    $fontSizeInput.val(++fontSizeValue);
                    //$textDraggableElement.css('font-size', fontSizeValue);
                    //draggableElementData.editableElement.FontDetails.FontSize = fontSizeValue;

                    if ($textDraggableElement.hasClass('focus')) {
                        $textDraggableElement.find('span').css('font-size', fontSizeValue);
                        draggableElementData.editableElement.FontDetails.FontSize = fontSizeValue;
                    }
                    else if ($tableLabelDraggableElement.hasClass('focus')) {
                        $tableLabelDraggableElement.find('span').css('font-size', fontSizeValue);
                        draggableElementData.tableNumberLabel.FontDetails.FontSize = fontSizeValue;
                    }
                    else if ($tableDigitDraggableElement.hasClass('focus')) {
                        $tableDigitDraggableElement.find('span').css('font-size', fontSizeValue);
                        draggableElementData.tableNumberDigit.FontDetails.FontSize = fontSizeValue;
                    }
                }
            })

        }

        function eventDropdownListHandler() {
            var $eventDropdownList = $('#Events');

            $eventDropdownList.val('');

            $eventDropdownList.on('change', function () {
                draggableElementData.event_id = parseInt($(this).val());
                showPreviewButtonHideDownloadButton();
            });

        }

        $(document).ready(function () {
            fontSizeHandler();

            qrCodeResizeHandler.Init();

            eventDropdownListHandler();

            draggableElementFineTunePositionHandler.initilize().handlePositioning();

           colorPickerHandler().initilize().setColor();

            toggleCardGenerationNavigationMenu();

            cardElementActionsHandler();

            generateAndPreview(draggableElementData);

            bulkGenerateAndPreview(draggableElementData);

            cardDownloadHandler();
            bulkCardDownloadHandler();
        });

        function toggleCardGenerationNavigationMenu() {
            var $cardGenerationNavToggeler = $('#card-generation-nav-toggler');
            var $sidebarMenu = $('#sidebar-menu');

            $cardGenerationNavToggeler.on('click', function (e) {
                e.preventDefault();

                $sidebarMenu.toggleClass('active');
            });
        }

        function cardElementActionsHandler() {
            $cardElements = $('.card-item');

            $.each($cardElements, function (index, cardDraggableElement) {
                var $cardDraggableElement = $(cardDraggableElement);

                $cardDraggableElement.on('click drag', function () {

                    if ($cardDraggableElement.hasClass('focus')) {
                        if ($cardDraggableElement.attr('data-content') == 'invitee-qr-code') {
                            setPositionOnDrag($cardDraggableElement, draggableElementData.qrCodeElement);

                        } else if ($cardDraggableElement.attr('data-content') == 'event-invitee') {
                            setPositionOnDrag($cardDraggableElement, draggableElementData.editableElement);

                            fontFamilyHandler($(this));
                        } else if ($cardDraggableElement.attr('data-content') == 'table_number_label') {
                            setPositionOnDrag($cardDraggableElement, draggableElementData.tableNumberLabel);

                            fontFamilyHandler($(this));
                        } else if ($cardDraggableElement.attr('data-content') == 'table_number_digit') {
                            setPositionOnDrag($cardDraggableElement, draggableElementData.tableNumberDigit);

                            fontFamilyHandler($(this));
                        }

                        showPreviewButtonHideDownloadButton();
                    }
                });
            });
        }

        function fontFamilyHandler($editableCardElement) {
            var $fontLinks = $('#pills-fontFamilies li>a');

            var $fontButtonText = $('#font-tab>span');

            $fontLinks.on('click', function (e) {
                e.preventDefault();

                if ($editableCardElement.hasClass('focus')) {

                    var elementFontFamily = $(this).css('font-family').replaceAll("\"", "");
                    $editableCardElement.find('span').css('font-family', elementFontFamily);

                    if ($editableCardElement.attr('data-content') == 'event-invitee')
                    {
                        draggableElementData.editableElement.FontDetails.FontName = elementFontFamily;
                    }
                    else if ($editableCardElement.attr('data-content') == 'table_number_label')
                    {
                        draggableElementData.tableNumberLabel.FontDetails.FontName = elementFontFamily;
                    }
                    else if ($editableCardElement.attr('data-content') == 'table_number_digit')
                    {
                        draggableElementData.tableNumberDigit.FontDetails.FontName = elementFontFamily;
                    }

                    $fontButtonText.text(elementFontFamily);

                }

                showPreviewButtonHideDownloadButton();
            });
        }

        function setPositionOnDrag($cardElement, positionProperty) {
            //Get element instant position
            positionProperty.Position.LeftPosition = parseFloat($cardElement.css('left'));
            positionProperty.Position.TopPosition = parseFloat($cardElement.css('top'));
        }

        function generateAndPreview(draggableElementData) {
            var $previewButton =  $('#previewButton');

            $previewButton.css({
                'border-top-left-radius': '60px',
                'border-bottom-left-radius': '60px',
            });

            $previewButton.on('click', function (e) {
                e.preventDefault();

                var $bulkGeneratorButton = $('#bulkGenerateButton');
                var $bulkDownloadButton = $("#bulk-download-button");

                $bulkDownloadButton.hide();
                $bulkGeneratorButton.show();

                var $eventDropDown = $('#Events');

                if ($eventDropDown.val() === '') {
                    alert("Please select event first");
                    return false;
                }

                $previewButton = $(this);
                $previewButton.addClass('card-design-wait');

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GenerateAndPreview", "CardDesignMaster")',
                    data: draggableElementData,
                    success: function (data) {
                        if (data.loginStatus == false) {
                            window.location.replace('@Url.Action("Login", "Login")');
                        }else if (data.downloadStatus == true) {
                            hidePreviewButtonShowDownloadButton();
                        } else {
                            showPreviewButtonHideDownloadButton();
                        }
                    }
                });
            });
        }

        function bulkGenerateAndPreview(draggableElementData) {

            var $bulkGeneratorButton = $('#bulkGenerateButton');
            var $bulkDownloadButton = $("#bulk-download-button");

            $bulkDownloadButton.hide();
            $bulkGeneratorButton.show();

            $bulkGeneratorButton.css({
                'border-top-right-radius': '60px',
                'border-bottom-right-radius': '60px',
            });

            $bulkGeneratorButton.on('click', function (e) {
                e.preventDefault();

                var $eventDropDown = $('#Events');

                if ($eventDropDown.val() === '') {
                    alert("Please select event first");
                    return false;
                }

                showBulkGenerateButtonHideDownloadButton();

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("BulkGenerateAndPreview", "CardDesignMaster")',
                    data: draggableElementData,
                    success: function (data) {
                        if (data.loginStatus == false) {
                            window.location.replace('@Url.Action("Login", "Login")');
                        } else {
                            if (data.downloadStatus == true) {
                                hideBulkGenerateButtonShowDownloadButton();

                                $bulkGeneratorButton.hide();
                                $bulkDownloadButton.show();
                            } else {
                                $bulkDownloadButton.hide();
                                $bulkGeneratorButton.show();
                            }
                        }
                    }
                });


            });
        }

        function showPreviewButtonHideDownloadButton() {
            $('#previewButton').removeClass('card-design-wait').show();
            $(downloadButton).addClass('d-none');
        }

        function hidePreviewButtonShowDownloadButton() {
            $('#previewButton').removeClass('card-design-wait').hide();
            $(downloadButton).removeClass('d-none');
        }

        function showBulkGenerateButtonHideDownloadButton() {
            $('#bulkGenerateButton').find('.spinner-border').show();
            //$(downloadButton).addClass('d-none');
        }

        function hideBulkGenerateButtonShowDownloadButton() {
            $('#bulkGenerateButton').find('.spinner-border').hide();
            //$(downloadButton).removeClass('d-none');
        }


        function cardDownloadHandler() {
            var $eventDropDown = $('#Events');
            $(downloadButton).on('click', function () {
                if ($eventDropDown.val() !== '') {
                    location.href = "@Url.Action("DownloadGenerateAndPreview", "CardDesignMaster")?event_id=" + $eventDropDown.val();
                } else {
                    alert("Please select event first");
                }
            })
        }

        function bulkCardDownloadHandler() {
            var $eventDropDown = $('#Events');
            $('#bulk-download-button').on('click', function () {
                if ($eventDropDown.val() !== '') {
                    location.href = "@Url.Action("BulkDownloadGenerateAndPreview", "CardDesignMaster")?event_id=" + $eventDropDown.val();
                } else {
                    alert("Please select event first");
                }
            })
        }


    </script>
}