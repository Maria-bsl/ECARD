@model FUNDING.BL.BusinessEntities.Masters.Visitors

@{
    AjaxOptions createVisitorsAjaxOptions = new AjaxOptions();
    createVisitorsAjaxOptions.HttpMethod = "POST";
    //createVisitorsAjaxOptions.UpdateTargetId = "VisitorsCount";
    createVisitorsAjaxOptions.OnBegin = "OnBeginRequestCreate";
    createVisitorsAjaxOptions.OnSuccess = "OnSuccessRequestCreate";
    //createVisitorsAjaxOptions.OnComplete = "OnCompleteRequestCreate";
    createVisitorsAjaxOptions.OnFailure = "OnFailureRequestCreate";
    //createVisitorsAjaxOptions.Confirm = "Do you want to add invitee?";
}

@using (Ajax.BeginForm(actionName: "AjaxHelperCreateForm", controllerName: "Visitors", routeValues: null,
    ajaxOptions: createVisitorsAjaxOptions, htmlAttributes: new { id = "ajaxHelperCreateForm", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()

    <!-- Modal -->
    <div class="modal fade" id="ajaxHelperCreateModal" tabindex="-1" role="dialog" data-bs-backdrop="static" data-keyboard="false" aria-labelledby="ajaxHelperCreateLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-xl">
            <div id="divVisitors" class="modal-content position-relative">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Register Visitor</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    </button>
                </div>
                <div class="modal-body">

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.Hidden("Int_Mobile_number")

                        <div class="form-group row ">
                            @Html.LabelFor(model => model.visitor_name, htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2" })
                            <div class="col-sm-8 col-lg-9 col-xl-10">
                                @Html.EditorFor(model => model.visitor_name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.visitor_name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row ">
                            @Html.LabelFor(model => model.card_state_mas_sno, "Card State", htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2" })
                            <div class="col-sm-8 col-lg-9 col-xl-10">
                                @Html.DropDownListFor(model => model.card_state_mas_sno, ViewBag.cardState as IEnumerable<SelectListItem>, "Select card state", htmlAttributes: new { @class = "form-control" })

                                @Html.ValidationMessageFor(model => model.card_state_mas_sno, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row ">
                            @Html.LabelFor(model => model.no_of_persons, htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2" })
                            <div class="col-sm-8 col-lg-9 col-xl-10">
                                @Html.EditorFor(model => model.no_of_persons, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.no_of_persons, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row ">
                            @Html.LabelFor(model => model.Table_Number, htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2" })
                            <div class="col-sm-8 col-lg-9 col-xl-10">
                                @Html.EditorFor(model => model.Table_Number, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Table_Number, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row ">
                            @Html.LabelFor(model => model.mobile_no, htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2" })
                            <div class="col-sm-8 col-lg-9 col-xl-10">
                                @Html.TextBoxFor(model => model.mobile_no, new { @class = "form-control" })

                                @*@Html.EditorFor(model => model.mobile_no, new { htmlAttributes = new { @class = "form-control", data_val_remote = "This mobile number already exists", data_val_remote_additionalfields = "*.mobile_no,*.__RequestVerificationToken,*.mobile_no_clone", data_val_remote_type = "POST", data_val_remote_url = Url.Action("IsMobileNumberAvailable", "Visitors") } })*@

                                @*@Html.ValidationMessageFor(model => model.mobile_no, "", new { @class = "text-danger" })*@
                                <span id="intl-input-error" class="d-none text-danger"></span>
                            </div>
                        </div>

                        <div class="form-group row ">
                            @Html.LabelFor(model => model.email_address, htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2" })
                            <div class="col-sm-8 col-lg-9 col-xl-10">
                                @Html.EditorFor(model => model.email_address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.email_address, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="submitCreateVisitors" type="submit" class="btn btn-outline-info btn-rounded">Save</button>
                    <button type="button" class="btn btn-outline-danger btn-rounded" data-bs-dismiss="modal">Close</button>
                </div>
                <div class="position-absolute w-100 h-100 modal_pre-loader">
                    <div class='d-flex justify-content-center align-items-center h-100'>
                        <div class='ripple-pre-loader'>
                            <div></div>
                            <div></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}