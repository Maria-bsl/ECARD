@model FUNDING.BL.BusinessEntities.Masters.Events


@{ AjaxOptions updateEventDetailsAjaxOptions = new AjaxOptions();
    updateEventDetailsAjaxOptions.HttpMethod = "POST";
    //updateEventDetailsAjaxOptions.UpdateTargetId = "divEventDetails";
    updateEventDetailsAjaxOptions.OnBegin = "OnBeginRequestUpdate";
    updateEventDetailsAjaxOptions.OnSuccess = "OnSuccessRequestUpdate";
    //updateEventDetailsAjaxOptions.OnComplete = "OnCompleteRequestUpdate";
    updateEventDetailsAjaxOptions.OnFailure = "OnFailureRequestUpdate";
    updateEventDetailsAjaxOptions.Confirm = "Do you want to update event?"; }

@using (Ajax.BeginForm(actionName: "AjaxHelperUpdateForm", controllerName: "Events", routeValues: null,
    ajaxOptions: updateEventDetailsAjaxOptions, htmlAttributes: new { id = "ajaxHelperUpdateForm", autocomplete = "off" }))
{
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.event_det_sno)

    <div class="row">
        <div class="form-group col-sm-6 col-lg-5 mb-3">
            @Html.LabelFor(model => model.inviter_name, htmlAttributes: new { @class = "d-block mb-1" })
            @Html.TextAreaFor(model => model.inviter_name, new { @class = "form-control mw-100" })
            @Html.ValidationMessageFor(model => model.inviter_name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-sm-6 col-lg-5 mb-3">
            @Html.LabelFor(model => model.event_name, htmlAttributes: new { @class = "d-block mb-1" })
            @Html.TextAreaFor(model => model.event_name, new { @class = "form-control mw-100", @readonly = true })
            @Html.ValidationMessageFor(model => model.event_name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-sm-6 col-lg-5 mb-3">
            @Html.LabelFor(model => model.Event_Date_String, htmlAttributes: new { @class = "d-block mb-1" })
            @Html.TextBoxFor(model => model.Event_Date_String, new { type = "text", @class = "form-control mw-100", @readonly = true })
            @Html.ValidationMessageFor(model => model.Event_Date_String, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-sm-6 col-lg-5 mb-3">
            @Html.LabelFor(model => model.Event_Start_Time_String, htmlAttributes: new { @class = "d-block mb-1" })
            @Html.TextBoxFor(model => model.Event_Start_Time_String, new { type = "text", @class = "form-control mw-100", @readonly = true })
            @Html.ValidationMessageFor(model => model.Event_Start_Time_String, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-sm-6 col-lg-5 mb-3">
            @Html.LabelFor(model => model.venue, htmlAttributes: new { @class = "d-block mb-1" })

            @Html.TextAreaFor(model => model.venue, new { @class = "form-control mw-100" })
            @Html.ValidationMessageFor(model => model.venue, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-sm-6 col-lg-5 mb-3">
            @Html.LabelFor(model => model.reservation, htmlAttributes: new { @class = "d-block mb-1" })

            @Html.TextAreaFor(model => model.reservation, new { @class = "form-control mw-100" })
            @Html.ValidationMessageFor(model => model.reservation, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-sm-6 col-lg-5 mb-3">
            @Html.LabelFor(model => model.remarks, htmlAttributes: new { @class = "d-block mb-1" })

            @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control mw-100" } })
            @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
        </div>

        <div class="text-end col-lg-10">
            <button id="submitCreateCustomers" type="submit" class="btn btn-outline-info btn-rounded">Update</button>
            <button type="button" class="btn btn-outline-danger btn-rounded" data-bs-dismiss="modal">Close</button>
        </div>
    </div>
</div>}
