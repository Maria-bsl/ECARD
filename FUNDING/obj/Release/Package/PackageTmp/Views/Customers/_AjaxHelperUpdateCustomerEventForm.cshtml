@model FUNDING.BL.BusinessEntities.Masters.CustomerEventViewModel

@{
    AjaxOptions updateCustomersAjaxOptions = new AjaxOptions();
    updateCustomersAjaxOptions.HttpMethod = "POST";
    //updateCustomersAjaxOptions.UpdateTargetId = "divCustomers";
    updateCustomersAjaxOptions.OnBegin = "OnBeginRequestUpdate";
    updateCustomersAjaxOptions.OnSuccess = "OnSuccessRequestUpdate";
    //updateCustomersAjaxOptions.OnComplete = "OnCompleteRequestUpdate";
    updateCustomersAjaxOptions.OnFailure = "OnFailureRequestUpdate";
    updateCustomersAjaxOptions.Confirm = "Do you want to update event?";
}

@using (Ajax.BeginForm(actionName: "AjaxHelperUpdateCustomerEvent", controllerName: "Customers", routeValues: null,
    ajaxOptions: updateCustomersAjaxOptions, htmlAttributes: new { id = "ajaxHelperUpdateForm", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()

    <!-- Modal -->
    <div class="modal fade" id="ajaxHelperUpdateModal" tabindex="-1" role="dialog" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="ajaxHelperUpdateLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-xl">
            <div id="divCustomers" class="modal-content position-relative">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Update Customer Event Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    </button>
                </div>
                <div class="modal-body">

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        @Html.HiddenFor(Model => Model.EventID)

                        <div class="form-group row ">
                            @Html.LabelFor(model => model.CustomerID, "Customer Name", htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2" })
                            <div class="col-sm-8 col-lg-9 col-xl-10">
                                @Html.DropDownListFor(model => model.CustomerID, ViewBag.Customer as IEnumerable<SelectListItem>, "Select customer name", htmlAttributes: new { @class = "form-control" })

                                @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2" })
                            <div class="col-md-8 col-lg-9 col-xl-10">
                                @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.EventDate, htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2" })
                            <div class="col-sm-8 col-lg-9 col-xl-10">
                                <input type="text" id="EventDate" name="EventDate" class="form-control" readonly="readonly" data-val="true" data-val-required="The Ocassion Date field is required.">
                                @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Event_Start_Time, htmlAttributes: new { @class = "col-form-label col-sm-4 col-lg-3 col-xl-2" })
                            <div class="col-sm-8 col-lg-9 col-xl-10">
                                <input type="text" id="Event_Start_Time" name="Event_Start_Time" class="form-control" readonly="readonly" data-val="true" data-val-required="The Start Time field is required.">
                                @Html.ValidationMessageFor(model => model.Event_Start_Time, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button id="submitupdateCustomers" type="submit" class="btn btn-outline-info btn-rounded">Update</button>
                    <button type="button" class="btn btn-outline-danger btn-rounded" data-bs-dismiss="modal">Close</button>
                </div>
                <div class="position-absolute w-100 h-100 modal_pre-loader">
                    <div class='d-flex justify-content-center align-items-center h-100'>
                        <div class='ripple-pre-loader'>
                            <div></div>
                            <div></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}