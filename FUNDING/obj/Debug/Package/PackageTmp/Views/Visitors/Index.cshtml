@model FUNDING.BL.BusinessEntities.Masters.Visitors

@{ ViewBag.Title = "Events";
    Layout = "~/Views/Shared/_Customers.cshtml";

    ViewData["Title"] = "Invitees";
    ViewData["Home"] = "Home";
    ViewData["Bulk_Upload"] = "Bulk Upload";
    ViewData["Bct"] = "Create";
    ViewData["Sms"] = "Send SMS ALL";

    //Table header labels
    ViewData["Sno"] = "Sno";

    ViewData["Actions"] = "Actions"; }


@section Styles {
    <link href="~/Scripts/intl-tel-input/css/isValidNumber.css" rel="stylesheet" />
    <link href="~/Scripts/intl-tel-input/css/intlTelInput.min.css" rel="stylesheet" />
    <link href="~/Content/Site.css" rel="stylesheet" />

    <style>
        .datepicker td, .datepicker th {
            padding: 3px !important;
        }

        .form-control {
            min-height: auto;
        }

        input[type=file] {
            max-width: 100%;
        }

        @@media (max-width: 450px) {
            #visitiorContentHeader {
                display: flex;
                flex-direction: column;
            }

            #visitorSummaryBox {
                margin-top: 0.75rem;
                display: flex;
                justify-content: space-between;
                width: 100%;
                order: 2;
            }
        }
    </style>
}


<div class="row page-titles">
    <div class="col-md-5 align-self-center">
        <h4 class="text-themecolor">@ViewData["Title"]</h4>
    </div>
    <div class="col-md-7 align-self-center text-end">
        <div class="d-flex justify-content-end align-items-center">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Dashboard", "CustomerActivity")">@ViewData["Home"]</a></li>
                <li class="breadcrumb-item active">@ViewData["Title"]</li>
            </ol>
        </div>
    </div>
</div>
<div class="card border-0">
    <div class="card-body px-3">
        <div id="visitiorContentHeader" class="mb-1 justify-content-between align-items-center" style="display: flex;">
            <div id="visitorSummaryBox" class="position-relative p-2 border border-success rounded">
                <span class="h6 m-0">Total Invitees: </span>
                <span style="font-size: 0.75rem; font-weight: 600;" class="badge rounded-pill bg-info" id="VisitorsCount"></span>
            </div>
            <div class="btn-group align-self-end">
                <!-- Button trigger modal -->

                <button type="button" class="btn btn-outline-success btn-rounded" data-bs-toggle="modal" data-bs-target="#ajaxHelperBulkUploadModal">
                    <i class="fas fa-upload"></i>
                    @ViewData["Bulk_Upload"]
                </button>
                <button type="button" class="btn btn-outline-primary btn-rounded" data-bs-toggle="modal" data-bs-target="#ajaxHelperCreateModal">
                    <i class="fas fa-plus"></i>
                    @ViewData["Bct"]
                </button>

                <button type="button" class="btn btn-outline-secondary btn-rounded" id="sendsms">
                    <i class="fas fa-paper-plane"></i>
                    Send All SMS
                </button>

                <button type="button" class="btn btn-sm btn-outline-warning btn-rounded" data-bs-toggle="modal" data-bs-target="#ajaxHelperBulkUploadInviteeModal">
                    <i class="fas fa-upload"></i>
                    Invitee Code Upload
                </button>
            </div>
        </div>
        <hr />
        @Html.Partial("_AjaxHelperBulkUploadInviteeForm")

        @Html.Partial("_AjaxHelperBulkUploadForm")

        @Html.Partial("_AjaxHelperCreateForm")

        @Html.Partial("_AjaxHelperUpdateForm")

        @Html.Partial("_AjaxHelperDeleteForm")

        @Html.Partial("_AjaxHelperSmsForm")

        @Html.Partial("_AjaxHelperSmsAllForm")

        <div class="table-responsive with-loader">
            <table id="VisitorsTable" class="table table-bordered display" style="width: 100%;">
                <thead>
                    <tr>
                        <th class="th-sno pl-1 text-center">@ViewData["Sno"]</th>
                        <th>Invitee Name</th>
                        <th>Card State</th>
                        <th>Invitees Per Card</th>
                        <th>Table No</th>
                        <th>Mobile Number</th>
                        <th>Email Address</th>
                        <th class="th-actions px-0">
                            <div class="th-actions-div">
                                @ViewData["Actions"]
                            </div>
                        </th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>



@section Scripts {
    <script src="~/Script/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Script/jquery.validate.min.js"></script>
    <script src="~/Script/moment.min.js"></script>
    <script src="~/Script/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/SweetAlert2/sweetalert2.all.min.js"></script>
    <script src="~/Scripts/numeral.min.js"></script>
    <script src="~/Scripts/chart.min.js"></script>
    <script src="~/Scripts/intl-tel-input/js/intlTelInput-jquery.min.js"></script>
    <script src="~/Scripts/intl-tel-input/js/intlTelInput.js"></script>
    <script src="~/Script/additional-methods.min.js"></script>
    <script src="~/Script/app.js"></script>


    <script>
        $.validator.unobtrusive.adapters.addBool('fileextensions');
        $.validator.addMethod('fileextensions', function (value, element, param) {

            //Only Excel files are allowed.
            var allowedCardTemplateExtension = ['xlsx', 'xls'];
            var fileAttachmentExtension = value.split('.').pop();

            return allowedCardTemplateExtension.indexOf(fileAttachmentExtension) >= 0;
        });
    </script>

    <script>
        var VisitorsDatatable, $clickedDeleteButton, $clickedSmsButton, dataUrl, dataid;
        var $clickedSmsAllButton = $('#sendsms');
        var $ajaxHelperCreateForm = $('#ajaxHelperCreateForm');
        var $ajaxHelperUpdateForm = $('#ajaxHelperUpdateForm');
        var $ajaxHelperDeleteForm = $('#ajaxHelperDeleteForm');
        var $ajaxHelperSmsAllForm = $('#ajaxHelperSmsAllForm');
        var $ajaxHelperSmsForm = $('#ajaxHelperSmsForm');
        var $VisitorsTable = $('#VisitorsTable');
        var $ajaxHelperCreateModal = $('#ajaxHelperCreateModal');
        var $ajaxHelperUpdateModal = $('#ajaxHelperUpdateModal');
        var $modalPreLoader = $('#modal_pre-loader');

        var intl_tel_input = (function () {

            function Intl_Tel_Input() {
                this.createFormElement = $('#ajaxHelperCreateForm');
                this.updateFormElement = $('#ajaxHelperUpdateForm');
            }

            Intl_Tel_Input.prototype.InitilizeUpdateForm = function () {

                var $form = this.updateFormElement.get(0);

                var $mobileNumber = $form.querySelector("#mobile_no");

                initilize_intlTelInput($mobileNumber);

                ValidateInternationMobileNumber($form, $mobileNumber);

            }

            Intl_Tel_Input.prototype.InitilizeOnCreateForm = function () {

                var $form = this.createFormElement;
                var $mobileNumber = document.querySelector("#mobile_no");

                initilize_intlTelInput($mobileNumber);

                ValidateInternationMobileNumber($form.get(0), $mobileNumber);

                var $modal = this.createFormElement.find('.modal');
                var iti = window.intlTelInputGlobals.getInstance($mobileNumber);

                $modal.on('show.bs.modal', function () {
                    iti.setCountry("tz");
                    $form.find("#intl-input-error").addClass('d-none');
                });
            }

            // here, the index maps to the error code returned from getValidationError - see readme
            function getErrorMapArray() {
                var errorMap = [
                    "Please enter a valid mobile operator code",
                    "Invalid country code",
                    "The mobile number is too short",
                    "The mobile number is too long",
                    "Please enter a valid mobile number"];

                return errorMap;
            }

            function initilize_intlTelInput($mobileNumber) {

                 window.intlTelInput($mobileNumber, {
                    // allowDropdown: false,
                    // autoHideDialCode: false,
                    // autoPlaceholder: "off",
                    dropdownContainer: document.body,
                    // excludeCountries: ["us"],
                    formatOnDisplay: false,
                    // geoIpLookup: function(callback) {
                    //   $.get("http://ipinfo.io", function() {}, "jsonp").always(function(resp) {
                    //     var countryCode = (resp && resp.country) ? resp.country : "";
                    //     callback(countryCode);
                    //   });
                    // },
                    //hiddenInput: "full_number",
                    //initialCountry: "auto",
                    // localizedCountries: { 'de': 'Deutschland' },
                    //nationalMode: false,
                    // onlyCountries: ['us', 'gb', 'ch', 'ca', 'do'],
                    //placeholderNumberType: "MOBILE",
                    preferredCountries: ['tz'],
                    separateDialCode: true,
                    utilsScript: "@Url.Content("~/Scripts/intl-tel-input/js/utils.js")",
                 });
            }

            function ValidateInternationMobileNumber($form, $input) {
                var iti = window.intlTelInputGlobals.getInstance($input);

                $input.addEventListener('keyup', reset($form));
                $input.addEventListener('change', reset($form));

                $input.addEventListener('blur', function () {
                    reset($form);

                    $input.classList.remove("invalid-mobile-number");

                    var mobileNumberValue = $input.value.trim();
                    var isOnlyDigits = new RegExp(/^\d+$/);

                    var $intl_tel_errorMsg = $form.querySelector("#intl-input-error");

                    if (mobileNumberValue) {
                        if (isOnlyDigits.test(mobileNumberValue)) {
                            if (!iti.isValidNumber()) {
                                var errorCode = iti.getValidationError();
                                var errorMap = getErrorMapArray();

                                if (errorCode >= 0 && errorCode < errorMap.length) {
                                    $intl_tel_errorMsg.innerHTML = errorMap[errorCode];
                                    $intl_tel_errorMsg.classList.remove("d-none");
                                    $intl_tel_errorMsg.classList.add("d-block");
                                    $input.classList.add("invalid-mobile-number");
                                }

                            } else {
                                $input.classList.remove("invalid-mobile-number");
                                var $intl_tel_mobileNumber = $form.querySelector("#Int_Mobile_number");
                                $intl_tel_mobileNumber.value = iti.getNumber();
                            }

                        } else {
                            $input.classList.add("invalid-mobile-number");
                            $intl_tel_errorMsg.classList.remove("d-none");
                            $intl_tel_errorMsg.classList.add("d-block");
                            $intl_tel_errorMsg.innerHTML = "Please enter a valid mobile number";
                        }
                    }
                });

            }

            function reset($form){
                var $intl_tel_errorMsg = $form.querySelector("#intl-input-error");

                $intl_tel_errorMsg.innerHTML = "";
                $intl_tel_errorMsg.classList.remove("d-block");
                $intl_tel_errorMsg.classList.add("d-none");
            };


            return new Intl_Tel_Input();
        })();

        $(document).ready(function () {
           VisitorsDatatable = $VisitorsTable.DataTable({
                processing: true,
                deferRender: true,
                stateSave: 5*60,
                language: {
                    processing:
                        "<div class='d-flex justify-content-center align-items-center h-100'>"+
                        "\t<div class='ripple-pre-loader'>" +
                        "\t\t<div></div>" +
                        "\t\t<div></div>" +
                        "\t</div>"+
                        "</div>"
                },

                ajax: {
                    url: "@Url.Action("IndexDataTable")",
                    type: "POST",
                    dataType: "json",

                },

                columns: [
                    { title: 'Sno',data: 'id' },
                    { data: 'visitor_name', title:'Invitee Name'},
                    { data:'card_state', title:'Card State'},
                    { data: 'no_of_persons', title: 'Invitees Per Card' },
                    { data: 'table_number', title: 'Table No' },
                    { data: 'mobile_no', title: 'Mobile Number' },
                    { data: 'email_address', title:'Email Address'},
                    {
                        orderable: false,
                        data: null,
                         render: function (data, type, row) {
                            var update_url = '/Visitors/AjaxHelperUpdateForm/'+ row.visitor_det_sno;
                             var delete_url = '/Visitors/AjaxHelperDeleteForm/' + row.visitor_det_sno;
                             var Sms_url = '/Visitors/AjaxHelperSmsForm/' + row.visitor_det_sno + '/' + row.event_det_sno;
                             var Sms_all_url = '/Visitors/AjaxHelperSmsAllForm/' + row.event_det_sno;
                             dataUrl = '/Visitors/AjaxHelperSmsAllForm/' + row.event_det_sno;

                             return "<div class='position-relative'>"+
                                "<div class='table-buttons justify-content-around'> " +
                                 "\t<button class='btn btn-outline-info btn-sm' data-id=" + row.visitor_det_sno + " data-btn-type='edit' data-url=" + update_url + ">" +
                                "\t\t<i class='fas fa-pencil-alt'></i>" +
                                "\t</button>" +
                                 "\t<button class='btn btn-outline-danger btn-sm' data-id=" + row.visitor_det_sno + " data-btn-type='delete' data-url=" + delete_url + ">" +
                                "\t\t<i class='fas fa-trash'></i>" +
                                 "\t</button>" +
                                 "\t<button class='btn btn-outline-success btn-sm' data-id=" + row.visitor_det_sno + " data-et=" + row.event_det_sno + "  data-btn-type='sms' data-url=" + Sms_url + ">" +
                                 "\t\t<i class='fas fa-paper-plane'></i>" +
                                 "\t</button>" +
                                 "\t<button class='btn btn-outline-success btn-sm d-none' data-all-id=" + row.event_det_sno + "  data-btn-type='smsall' data-all-url=" + Sms_all_url + ">" +
                                 "\t\t<i class='fas fa-paper-plane'></i>" +
                                 "\t</button>" +
                                "</div>" +
                                "<div class='justify-content-center h-100 w-100 table-preloader'>"+
                                "\t<div class='loading-swapping-wrapper'>"+
                                "\t\t<div class='loading-swapping'>"+
                                "\t\t\t<div></div>"+
                                "\t\t\t<div></div>"+
                                "\t\t\t<div></div>"+
                                "\t\t</div>"+
                                "\t</div>"+
                                "</div>"+
                                "</div>";
                        }
                    }
                ]

           });

            VisitorsDatatable.on('xhr', function () {
                var ajaxJson = VisitorsDatatable.ajax.json();
                $('#VisitorsCount').text(ajaxJson.TotalInvitees);
            });

            intl_tel_input.InitilizeOnCreateForm();
            intl_tel_input.InitilizeUpdateForm();

            //On opening create modal clear the form fields
            resetFormFieldsOnModalClose($ajaxHelperCreateModal, $ajaxHelperCreateForm);

            resetFormFieldsOnModalClose($ajaxHelperBulkUploadModal, $ajaxHelperBulkUploadForm);

            resetFormFieldsOnModalClose($ajaxHelperBulkUploadInviteeModal, $ajaxHelperBulkUploadInviteeForm);

            OperationOnDatatableBtns();

            //UpdateVisitorCount();

            validateWhetherMobileNumberExists($ajaxHelperCreateForm);
            validateWhetherMobileNumberExists($ajaxHelperUpdateForm);

            submitCreateForm();
            submitUpdateForm();
           // SmsAllRowRecord()

        });

       @{ #region Operations On Datatable Buttons }

        function OperationOnDatatableBtns() {

            //click an update button
            $VisitorsTable.on('click', 'button[data-btn-type=edit]', function (e) {
                e.preventDefault();

                $clickedUpdateButton = $(this);

                updateRecordOperation($clickedUpdateButton);
            });

            //click an delete button
            $VisitorsTable.on('click', 'button[data-btn-type=delete]', function (e) {
                e.preventDefault();

                $clickedDeleteButton = $(this);

                deleteRowRecord($clickedDeleteButton);

                submitDeleteForm();

            });

            //click an sms button
            $VisitorsTable.on('click', 'button[data-btn-type=sms]', function (e) {
                e.preventDefault();

                $clickedSmsButton = $(this);

                SmsRowRecord($clickedSmsButton);

                submitSmsForm();

            });

           @* //click an All sms button
            $VisitorsTable.on('click', '#send-sms', function (e) {
                e.preventDefault();

                $clickedSmsAllButton = $(this);

                SmsAllRowRecord($clickedSmsAllButton);

                submitSmsAllForm();

            });*@


            $('#sendsms').click(function (e) {
                e.preventDefault();

               @* var tr = VisitorsDatatable.parentsUntil('tbody').get(3);

                $clickedSmsAllButton = $(tr);*@

                SmsAllRowRecord();

                submitSmsAllForm();
            });

        }

        function updateRecordOperation($this) {
            var url = $this.attr('data-url');
            var data_id = $this.attr('data-id');
            var tr = $this.parentsUntil('tbody').get(3);

            populateUpdateModalFormElements($(tr), data_id);

            //change form action attribute
            $ajaxHelperUpdateForm.attr('action', url);

            $ajaxHelperUpdateModal.modal('show');

        }

        function populateUpdateModalFormElements($table_row, data_id) {

            var row_data = VisitorsDatatable.row($table_row).data();

            var cardStateValue = getSelectValueForDropdownList(row_data.card_state);

            $ajaxHelperUpdateForm.find('#visitor_det_sno').val(row_data.visitor_det_sno);
            $ajaxHelperUpdateForm.find('#visitor_name').val(row_data.visitor_name);
            $ajaxHelperUpdateForm.find('#card_state_mas_sno').val(cardStateValue);
            $ajaxHelperUpdateForm.find('#no_of_persons').val(row_data.no_of_persons);
            $ajaxHelperUpdateForm.find('#Table_Number').val(row_data.table_number);
            $ajaxHelperUpdateForm.find('#Int_Mobile_number').val('+' + row_data.mobile_no);
            $ajaxHelperUpdateForm.find('#mobile_no_clone').val('+' + row_data.mobile_no);
            $ajaxHelperUpdateForm.find('#email_address').val(row_data.email_address);

            $mobileNumber = $ajaxHelperUpdateForm.find('#mobile_no').get(0);

            var iti = window.intlTelInputGlobals.getInstance($mobileNumber);
            iti.setNumber('+' + row_data.mobile_no);
        }

        function getSelectValueForDropdownList(optionItemText) {
            var $optinItemList = $ajaxHelperUpdateForm.find('#card_state_mas_sno option');
            var optionItemValue = '';

            $.map($optinItemList, function (value, index) {
                if ($(value).text().trim() === optionItemText) {
                    optionItemValue = $(value).val();
                }
            });
            return optionItemValue;
        }

        @{#endregion}

        @{ #region Create--Record Section }

        function submitCreateForm() {

            $ajaxHelperCreateForm.on('click', 'button[type=submit]', function (e) {
                e.preventDefault();

                var iti = window.intlTelInputGlobals.getInstance($ajaxHelperCreateForm.find('#mobile_no').get(0));

                if ($ajaxHelperCreateForm.valid() && iti.isValidNumber()) {
                    Swal.fire({
                        //title: 'Are you sure?',
                        text: "Do you want to add invitee record?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $ajaxHelperCreateForm.submit();
                        }
                    });
                }

            });

        }

        function OnBeginRequestCreate() {

            //Display preloader on modal open
            getModalPreLoader($ajaxHelperCreateModal).show();
        }

        function OnSuccessRequestCreate(data) {

            //Hide modal pre-loader after closing the modal
            getModalPreLoader($ajaxHelperCreateModal).hide();

            VisitorsDatatable.ajax.reload();

            $ajaxHelperCreateModal.modal('hide');

             if (data.loginStatus == false) {
                window.location.replace('@Url.Action("Login", "Login")');
            }
            else if (data.createStatus) {
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'success',
                    title: data.response
                })
            }

            //Reset form fields
            resetFormFieldsOnModalClose($ajaxHelperCreateModal, $ajaxHelperCreateForm);

        }

        function OnFailureRequestCreate() {

            //Hide modal pre-loader after closing the modal
            getModalPreLoader($ajaxHelperCreateModal).hide();

            $ajaxHelperCreateModal.modal('hide');

            //Reset form fields
            resetFormFieldsOnModalClose($ajaxHelperCreateModal, $ajaxHelperCreateForm);
        }

        @{ #endregion}

        @{ #region Update--Record Section }

        function submitUpdateForm() {

            $ajaxHelperUpdateForm.on('click', 'button[type=submit]', function (e) {
                e.preventDefault();

                var iti = window.intlTelInputGlobals.getInstance($ajaxHelperUpdateForm.find('#mobile_no').get(0));

                if ($ajaxHelperUpdateForm.valid() && iti.isValidNumber()) {
                    Swal.fire({
                        //title: 'Are you sure?',
                        text: "Do you want to update invitee record?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $ajaxHelperUpdateForm.submit();
                        }
                    });
                }

            });
        }

        function OnBeginRequestUpdate() {
            //Display preloader on modal open
            getModalPreLoader($ajaxHelperUpdateModal).show();
        }

        function OnSuccessRequestUpdate(data) {
            $ajaxHelperUpdateModal.modal('hide');

            //Reset form fields
            resetFormFieldsOnModalClose($ajaxHelperUpdateModal, $ajaxHelperUpdateForm);

            //Hide modal pre-loader after closing the modal
            getModalPreLoader($ajaxHelperUpdateModal).hide();

            if (data.loginStatus == false) {
                window.location.replace('@Url.Action("Login", "Login")');
            }
            else if (data.updateStatus) {
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'success',
                    title: data.response
                })
            }

            //refresh the datatable after updating data
            VisitorsDatatable.ajax.reload();
        }

        function OnFailureRequestUpdate() {
            $ajaxHelperUpdateModal.modal('hide');

            //Reset form fields
            resetFormFieldsOnModalClose($ajaxHelperUpdateModal, $ajaxHelperUpdateForm);

            //Hide modal pre-loader after closing the modal
            getModalPreLoader($ajaxHelperUpdateModal).hide();
        }

        @{ #endregion}

        @{ #region Delete--Record Section }

        function submitDeleteForm() {

            $ajaxHelperDeleteForm.on('click', 'button[type=submit]', function (e) {
                e.preventDefault();

                if ($ajaxHelperDeleteForm.valid()) {
                    Swal.fire({
                        //title: 'Are you sure?',
                        //text: "Do you want to update invitee record?",
                        text: "Do you want to delete invitee?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $ajaxHelperDeleteForm.submit();
                        }
                    });
                }

            });
        }

        function deleteRowRecord($this) {
            var url = $this.attr('data-url');
            var data_id = $this.attr('data-id');

            //change form action attribute
            $ajaxHelperDeleteForm.attr('action', url);

            $ajaxHelperDeleteForm.find('#visitor_det_sno').val(data_id);

            $('#deleteBtn').on('click', function (e) {
                e.preventDefault();

                if ($ajaxHelperDeleteForm.valid()) {
                    Swal.fire({
                        //title: 'Are you sure?',
                        //text: "Do you want to update invitee record?",
                        text: "Do you want to delete invitee?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $ajaxHelperDeleteForm.submit();
                        }
                    });
                }
            });

            $('#deleteBtn').trigger('click');

        }

        function OnBeginRequestDelete() {
            //Display preloader upon confirm delete
            $clickedDeleteButton.parent().hide().next().css('display', 'flex');
        }

        function OnSuccessRequestDelete(data) {
            //Hide preloader on success
            $clickedDeleteButton.parent().css('display', 'flex').next().hide();

            //Reset form fields
            resetFormFields($ajaxHelperDeleteForm);

            //if (data.deleteStatus) {
            //    alert(data.response);
            //} else {
            //    alert(data.response);
            //}

            if (data.deleteStatus) {
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'success',
                    title: data.response
                })
            } else {
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'success',
                    title: data.response
                })
            }

            //refresh the datatable after updating data
            VisitorsDatatable.ajax.reload();
        }

        function OnFailureRequestDelete() {
            //Hide preloader on failure
            $clickedDeleteButton.parent().css('display', 'flex').next().hide();

            //Reset form fields
            resetFormFields($ajaxHelperDeleteForm);

        }

        @{ #endregion}


        /*
         * Sms GOES HERE FUNCTIONS
         *
         * */
         @{ #region Sms--Record Section }

        function submitSmsForm() {

            $ajaxHelperSmsForm.on('click', 'button[type=submit]', function (e) {
                e.preventDefault();

                if ($ajaxHelperSmsForm.valid()) {
                    Swal.fire({
                        //title: 'Are you sure?',
                        //text: "Do you want to update invitee record?",
                        text: "Do you want to Sms invitee?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $ajaxHelperSmsForm.submit();
                        }
                    });
                }

            });
        }

        function SmsRowRecord($this) {
            var url = $this.attr('data-url');
            var data_id = $this.attr('data-id');
            var data_et = $this.attr('data-et');

            //change form action attribute
            $ajaxHelperSmsForm.attr('action', url);

            $ajaxHelperSmsForm.find('#visitor_det_sno').val(data_id);
            $ajaxHelperSmsForm.find('#event_det_sno').val(data_et);

            $('#smsBtn').on('click', function (e) {
                e.preventDefault();

                if ($ajaxHelperSmsForm.valid()) {
                    Swal.fire({
                        //title: 'Are you sure?',
                        //text: "Do you want to Sms invitee?",
                        text: "Do you want to Sms invitee?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $ajaxHelperSmsForm.submit();
                        }
                    });
                }
            });

            $('#smsBtn').trigger('click');

        }

        function OnBeginRequestSms() {
            //Display preloader upon confirm Sms
            $clickedSmsButton.parent().hide().next().css('display', 'flex');
        }

        function OnSuccessRequestSms(data) {
            //Hide preloader on success
            $clickedSmsButton.parent().css('display', 'flex').next().hide();

            //Reset form fields
            resetFormFields($ajaxHelperSmsForm);

            //if (data.deleteStatus) {
            //    alert(data.response);
            //} else {
            //    alert(data.response);
            //}

            if (data.SmsStatus) {
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'success',
                    title: data.response
                })
            } else {
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'success',
                    title: data.response
                })
            }

            //refresh the datatable after updating data
            VisitorsDatatable.ajax.reload();
        }

        function OnFailureRequestSms() {
            //Hide preloader on failure
            $clickedSmsButton.parent().css('display', 'flex').next().hide();

            //Reset form fields
            resetFormFields($ajaxHelperSmsForm);

        }

        @{ #endregion}


        function submitSmsAllForm() {

            $ajaxHelperSmsAllForm.on('click', 'button[type=submit]', function (e) {
                e.preventDefault();

                if ($ajaxHelperSmsAllForm.valid()) {
                    Swal.fire({
                        //title: 'Are you sure?',
                        //text: "Do you want to update invitee record?",
                        text: "Do you want to Sms All invitee?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $ajaxHelperSmsAllForm.submit();
                        }
                    });
                }

            });
        }

        function SmsAllRowRecord() {

            //change form action attribute
            $ajaxHelperSmsAllForm.attr('action', dataUrl);

            //$ajaxHelperSmsAllForm.find('#event_det_sno').val(data_id);

            $('#SmsAllBtn').on('click', function (e) {
                e.preventDefault();

                if ($ajaxHelperSmsAllForm.valid()) {
                    Swal.fire({
                        //title: 'Are you sure?',
                        //text: "Do you want to Sms invitee?",
                        text: "Do you want to Sms All invitee?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $ajaxHelperSmsAllForm.submit();
                        }
                    });
                }

            });
            $('#SmsAllBtn').trigger('click');

        }

        function OnBeginRequestSmsAll() {
            //Display preloader upon confirm Sms
          //  $clickedSmsButton.parent().hide().next().css('display', 'flex');
        }

        function OnSuccessRequestSmsAll(data) {
            //Hide preloader on success
           // $clickedSmsButton.parent().css('display', 'flex').next().hide();

            //Reset form fields
            resetFormFields($ajaxHelperSmsAllForm);

            //if (data.deleteStatus) {
            //    alert(data.response);
            //} else {
            //    alert(data.response);
            //}

            if (data.SmsStatus) {
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'success',
                    title: data.response
                })
            } else {
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: 'success',
                    title: data.response
                })
            }

            //refresh the datatable after updating data
            //VisitorsDatatable.ajax.reload();
        }

        function OnFailureRequestSmsAll() {
            //Hide preloader on failure
          //  $clickedSmsButton.parent().css('display', 'flex').next().hide();

            //Reset form fields
            resetFormFields($ajaxHelperSmsAllForm);

        }

        @{ #region Visitor bulk upload With QR Codes --Record Section }

        var $ajaxHelperBulkUploadInviteeForm = $('#ajaxHelperBulkUploadInviteeForm');
        var $ajaxHelperBulkUploadInviteeModal = $('#ajaxHelperBulkUploadInviteeModal');

        function submitBulkUploadInviteeForm() {
            $ajaxHelperBulkUploadInviteeForm.on('click', '#submitVisitors_BulkUploadInvites', function (e) {
                e.preventDefault();

                var x = confirm("Do you want to submit the attachmet?");

                if (x) {
                    $ajaxHelperBulkUploadInviteeForm.submit();
                }
            });
        }

        function OnBeginRequestBulkInviteeUpload() {

            //Display preloader on modal open
            getModalPreLoader($ajaxHelperBulkUploadInviteeModal).show();
        }

        function OnSuccessRequestBulkInviteeUpload(data) {

            //Hide modal pre-loader after closing the modal
            getModalPreLoader($ajaxHelperBulkUploadInviteeModal).hide();

            VisitorsDatatable.ajax.reload();

            $ajaxHelperBulkUploadInviteeModal.modal('hide');

            if (data.createStatus) {
                alert(data.response);
            }

            //Reset form fields
            resetFormFieldsOnModalClose($ajaxHelperBulkUploadInviteeModal, $ajaxHelperBulkUploadInviteeForm);

        }

        function OnFailureRequestBulkInviteeUpload() {

            //Hide modal pre-loader after closing the modal
            getModalPreLoader($ajaxHelperBulkUploadInviteeModal).hide();

            $ajaxHelperBulkUploadInviteeModal.modal('hide');

            //Reset form fields
            resetFormFieldsOnModalClose($ajaxHelperBulkUploadInviteeModal, $ajaxHelperBulkUploadInviteeForm);
        }

        @{ #endregion}



        @{ #region Visitor bulk upload --Record Section }

        var $ajaxHelperBulkUploadForm = $('#ajaxHelperBulkUploadForm');
        var $ajaxHelperBulkUploadModal = $('#ajaxHelperBulkUploadModal');

        function submitBulkUploadForm() {
            $ajaxHelperBulkUploadForm.on('click', '#submitVisitors_BulkUploa', function (e) {
                e.preventDefault();

                var x = confirm("Do you want to submit the attachmet?");

                if (x) {
                    $ajaxHelperBulkUploadForm.submit();
                }
            });
        }

        function OnBeginRequestBulkUpload() {

            //Display preloader on modal open
            getModalPreLoader($ajaxHelperBulkUploadModal).show();
        }

        function OnSuccessRequestBulkUpload(data) {

            //Hide modal pre-loader after closing the modal
            getModalPreLoader($ajaxHelperBulkUploadModal).hide();

            VisitorsDatatable.ajax.reload();

            $ajaxHelperBulkUploadModal.modal('hide');

            if (data.createStatus) {
                alert(data.response);
            }

            //Reset form fields
            resetFormFieldsOnModalClose($ajaxHelperBulkUploadModal, $ajaxHelperBulkUploadForm);

        }

        function OnFailureRequestBulkUpload() {

            //Hide modal pre-loader after closing the modal
            getModalPreLoader($ajaxHelperBulkUploadModal).hide();

            $ajaxHelperBulkUploadModal.modal('hide');

            //Reset form fields
            resetFormFieldsOnModalClose($ajaxHelperBulkUploadModal, $ajaxHelperBulkUploadForm);
        }

        @{ #endregion}

        /**
         * *This function clears form field of a specific
         *
         * @@param form specific form Element
         */
        function resetFormFields($form) {
            $form.find('#visitor_name').val('');
            $form.find('#card_state_mas_sno').val('');
            $form.find('#event_name').val('');
            $form.find('#no_of_persons').val('');
            $form.find('#Table_Number').val('');
            $form.find('#mobile_no').val('');
            $form.find('#email_address').val('');

            $form.find('#VisitorsFileAttachment').val('');
        }

        function resetFormFieldsOnModalClose(modal, form) {
            modal.on('hidden.bs.modal', function () {
                resetFormFields(form);
                validateFormElementsOnModalClose(form);
            });
        }

        function validateWhetherMobileNumberExists($form) {
            var $mobileNumberField = $form.find('#mobile_no');

            var iti = window.intlTelInputGlobals.getInstance($mobileNumberField.get(0));

            $mobileNumberField.on('blur', function (e) {
                if (iti.isValidNumber()) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("IsMobileNumberAvailable", "Visitors")',
                        data: populateDataToValidateWhetherMobileNumberExists($form),
                        success: function (data) {

                            if (!data) {
                                Swal.fire(
                                    'Mobile Number already in use',
                                    'The mobile number <strong>' + $form.find('#Int_Mobile_number').val().trim() + '</strong> is currently used by another visitor.',
                                    'info'
                                );
                            }
                        }
                    });
                }
            });
        }

        function populateDataToValidateWhetherMobileNumberExists($form) {
            var mobile_number = $form.find('#mobile_no').val();
            var verificationToken = $form.find('input[name=__RequestVerificationToken]').val();
            var int_mobile_number_cloned = $form.find('#mobile_no_clone').val();

            var countryCodeIdValue = $form.find('.iti__selected-dial-code').text().trim();
            var int_mobile_number_value = countryCodeIdValue + mobile_number;

            $form.find('#Int_Mobile_number').val(int_mobile_number_value);

            var int_mobile_number_cloned_value = int_mobile_number_cloned != null ? int_mobile_number_cloned : "";

            return {
                //"Mobile_number": mobile_number,
                "__RequestVerificationToken": verificationToken,
                "Int_Mobile_number": int_mobile_number_value,
                "Mobile_number_clone": int_mobile_number_cloned_value
            };
        }

        function getModalPreLoader(modal) {
            return modal.find('.modal_pre-loader');
        }

        function validateFormElementsOnModalClose(form) {
            var $field = form.find('.input-validation-error');
            var $spanErrorWrapper = form.find('.field-validation-error')

            //Validate the field
            $field.removeClass('input-validation-error').addClass('valid');
            $field.attr('aria-invalid', 'false');

            //Validate the span error wrapper and remove the span error message
            $spanErrorWrapper.removeClass('field-validation-error').addClass('field-validation-valid');
            $spanErrorWrapper.empty();
        }
    </script>
}
