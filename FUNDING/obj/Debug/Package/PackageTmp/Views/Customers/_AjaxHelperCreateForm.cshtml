@model FUNDING.BL.BusinessEntities.Masters.CustomerRegistrationViewModel

@{
    AjaxOptions createCustomersAjaxOptions = new AjaxOptions();
    createCustomersAjaxOptions.HttpMethod = "POST";
    //createCustomersAjaxOptions.UpdateTargetId = "divCustomers";
    createCustomersAjaxOptions.OnBegin = "OnBeginRequestCreate";
    createCustomersAjaxOptions.OnSuccess = "OnSuccessRequestCreate";
    //createCustomersAjaxOptions.OnComplete = "OnCompleteRequestCreate";
    createCustomersAjaxOptions.OnFailure = "OnFailureRequestCreate";
    createCustomersAjaxOptions.Confirm = "Do you want to add customer?";
}

@using (Ajax.BeginForm(actionName: "AjaxHelperCreateForm", controllerName: "Customers", routeValues: null,
    ajaxOptions: createCustomersAjaxOptions, htmlAttributes: new { id = "ajaxHelperCreateForm", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()

    <!-- Modal -->
    <div class="modal fade" id="ajaxHelperCreateModal" tabindex="-1" role="dialog" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="ajaxHelperCreateLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-xl">
            <div id="divCustomers" class="modal-content position-relative">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Customer Registration</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    </button>
                </div>
                <div class="modal-body">

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group row">
                            @Html.LabelFor(model => model.customerName, htmlAttributes: new { @class = "col-form-label col-md-4 col-lg-3 col-xl-2" })
                            <div class="col-md-8 col-lg-9 col-xl-10">
                                @Html.EditorFor(model => model.customerName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.customerName, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group row">
                            @Html.LabelFor(model => model.mobile_no, htmlAttributes: new { @class = "col-form-label col-md-4 col-lg-3 col-xl-2" })
                            <div class="col-md-8 col-lg-9 col-xl-10">
                                @Html.EditorFor(model => model.mobile_no, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.mobile_no, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group  row">
                            @Html.LabelFor(model => model.email_address, htmlAttributes: new { @class = "col-form-label col-md-4 col-lg-3 col-xl-2" })
                            <div class="col-md-8 col-lg-9 col-xl-10">
                                @Html.EditorFor(model => model.email_address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.email_address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.physical_address, htmlAttributes: new { @class = "col-form-label col-md-4 col-lg-3 col-xl-2" })
                            <div class="col-md-8 col-lg-9 col-xl-10">
                                @Html.EditorFor(model => model.physical_address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.physical_address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @*<label for="status" class="col-form-label col-md-4 col-lg-3 col-xl-2 f-label_align label-145">Select Status<span class="text-danger">*</span> </label>*@

                            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "ol-form-label col-md-4 col-lg-3 col-xl-2 f-label_align label-145" })
                            <div class="col-md-8 col-lg-9 col-xl-10">
                                @Html.DropDownList("Select Status", new List<SelectListItem>(ViewBag.statusList), htmlAttributes: new { @id = "status", @class = "form-control" })
                            </div>
                                @* <div class="col-md-8 col-lg-9 col-xl-10">
                <select id="status" class="form-control input-sm">
                    <option value="0">Select</option>
                    <option value="Active">Active</option>
                    <option value="InActive">InActive</option>
                    <option value="Testing">Testing</option>
                </select>
            </div>*@
                            </div>

                            @* <div class="form-group row">
            <label for="status" class="col-form-label col-md-4 col-lg-3 col-xl-2 f-label_align label-145">
                Select Status<span class="text-danger">*</span>
            </label>
            <div class="col-md-8 col-lg-9 col-xl-10">
                <select id="status" class="form-control input-sm ">
                    <option value="0">Select</option>
                    <option value="Active">Active</option>
                    <option value="InActive">InActive</option>
                    <option value="Testing">Testing</option>
                </select>
            </div>
        </div>*@




                        </div>
                </div>
                <div class="modal-footer">
                    <button id="submitCreateCustomers" type="submit" class="btn btn-outline-info btn-rounded">Save</button>
                    <button type="button" class="btn btn-outline-danger btn-rounded" data-bs-dismiss="modal">Close</button>
                </div>
                <div class="position-absolute w-100 h-100 modal_pre-loader">
                    <div class='d-flex justify-content-center align-items-center h-100'>
                        <div class='ripple-pre-loader'>
                            <div></div>
                            <div></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}